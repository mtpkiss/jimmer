"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[5049],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=a.createContext({}),u=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(t),d=l,g=m["".concat(c,".").concat(d)]||m[d]||s[d]||r;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:function(e,n,t){t.d(n,{Z:function(){return i}});var a=t(67294),l=t(34334),r="tabItem_Ymn6";function i(e){var n=e.children,t=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,i),hidden:t},n)}},65488:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(83117),l=t(67294),r=t(34334),i=t(72389),o=t(67392),c=t(7094),u=t(12466),p="tabList__CuJ",s="tabItem_LNqP";function m(e){var n,t,i=e.lazy,m=e.block,d=e.defaultValue,g=e.values,k=e.groupId,b=e.className,v=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),C=null!=g?g:v.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),h=(0,o.l)(C,(function(e,n){return e.value===n.value}));if(h.length>0)throw new Error('Docusaurus error: Duplicate values "'+h.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var S=null===d?d:null!=(n=null!=d?d:null==(t=v.find((function(e){return e.props.default})))?void 0:t.props.value)?n:v[0].props.value;if(null!==S&&!C.some((function(e){return e.value===S})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+S+'" but none of its children has the corresponding value. Available values are: '+C.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,c.U)(),f=N.tabGroupChoices,q=N.setTabGroupChoices,T=(0,l.useState)(S),y=T[0],x=T[1],j=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var D=f[k];null!=D&&D!==y&&C.some((function(e){return e.value===D}))&&x(D)}var E=function(e){var n=e.currentTarget,t=j.indexOf(n),a=C[t].value;a!==y&&(I(n),x(a),null!=k&&q(k,String(a)))},O=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,l=j.indexOf(e.currentTarget)+1;t=null!=(a=j[l])?a:j[0];break;case"ArrowLeft":var r,i=j.indexOf(e.currentTarget)-1;t=null!=(r=j[i])?r:j[j.length-1]}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",p)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":m},b)},C.map((function(e){var n=e.value,t=e.label,i=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:function(e){return j.push(e)},onKeyDown:O,onFocus:E,onClick:E},i,{className:(0,r.Z)("tabs__item",s,null==i?void 0:i.className,{"tabs__item--active":y===n})}),null!=t?t:n)}))),i?(0,l.cloneElement)(v.filter((function(e){return e.props.value===y}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},v.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==y})}))))}function d(e){var n=(0,i.Z)();return l.createElement(m,(0,a.Z)({key:String(n)},e))}},10453:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return d}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),i=t(65488),o=t(85162),c=["components"],u={sidebar_position:3,title:"SqlClient"},p=void 0,s={unversionedId:"jimmer-sql/basic/sql-client",id:"jimmer-sql/basic/sql-client",title:"SqlClient",description:"SqlClient\u662fjimmer-sql\u6240\u6709API\u7684\u5165\u53e3\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/jimmer-sql/basic/sql-client.mdx",sourceDirName:"jimmer-sql/basic",slug:"/jimmer-sql/basic/sql-client",permalink:"/jimmer/zh/docs/jimmer-sql/basic/sql-client",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/jimmer-sql/basic/sql-client.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"SqlClient"},sidebar:"tutorialSidebar",previous:{title:"\u6620\u5c04",permalink:"/jimmer/zh/docs/jimmer-sql/basic/mapping"},next:{title:"Table\u548cTableEx",permalink:"/jimmer/zh/docs/jimmer-sql/basic/table-and-table-ex"}},m={},d=[{value:"\u521b\u5efaSqlClient",id:"\u521b\u5efasqlclient",level:2},{value:"ConnectionManager",id:"connectionmanager",level:2},{value:"\u7b80\u5355\u7684ConnectionManager",id:"\u7b80\u5355\u7684connectionmanager",level:3},{value:"\u53d7Spring\u4e8b\u52a1\u7ba1\u7406\u7684ConnectionManager",id:"\u53d7spring\u4e8b\u52a1\u7ba1\u7406\u7684connectionmanager",level:3},{value:"Dialect",id:"dialect",level:2},{value:"Executor",id:"executor",level:2},{value:"\u5728\u65e5\u5fd7\u4e2d\u6253\u5370SQL\u8bed\u53e5\u548c\u5176\u53c2\u6570",id:"\u5728\u65e5\u5fd7\u4e2d\u6253\u5370sql\u8bed\u53e5\u548c\u5176\u53c2\u6570",level:3},{value:"\u641c\u96c6\u6267\u884c\u7f13\u6162\u7684SQL\u4ee5\u6c42\u6539\u8fdb",id:"\u641c\u96c6\u6267\u884c\u7f13\u6162\u7684sql\u4ee5\u6c42\u6539\u8fdb",level:3},{value:"ScalarProvider\u3002",id:"scalarprovider",level:2},{value:"\u81ea\u5b9a\u4e49ScalarProvider",id:"\u81ea\u5b9a\u4e49scalarprovider",level:3},{value:"\u5185\u7f6e\u7684ScalarProvider",id:"\u5185\u7f6e\u7684scalarprovider",level:3},{value:"IdGenerator",id:"idgenerator",level:2},{value:"DefaultBatchSize\u548cDefaultListBatchSize",id:"defaultbatchsize\u548cdefaultlistbatchsize",level:2},{value:"\u7f13\u5b58",id:"\u7f13\u5b58",level:2}],g={toc:d};function k(e){var n=e.components,t=(0,l.Z)(e,c);return(0,r.kt)("wrapper",(0,a.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"SqlClient\u662fjimmer-sql\u6240\u6709API\u7684\u5165\u53e3\u3002"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"\u5982\u679c\u4f60\u60f3\u4f7f\u7528jimmer\u7684spring-boot-starter\u548cspring-data-jimmer\u7b80\u5316\u4f7f\u7528\u65b9\u5f0f\uff0c\u65e0\u9700\u81ea\u5df1\u521b\u5efaSqlClient\uff0c\u53ef\u4ee5\u4e0d\u9605\u8bfb\u672c\u6587\u6863\u3002")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8eJava\u800c\u8a00\uff0c\u5b83\u662f",(0,r.kt)("inlineCode",{parentName:"li"},"org.babyfish.jimmer.sql.JSqlClient")),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8ekotlin\u800c\u8a00\uff0c\u5b83\u662f",(0,r.kt)("inlineCode",{parentName:"li"},"org.babyfish.jimmer.sql.kt.KqlClient")))),(0,r.kt)("h2",{id:"\u521b\u5efasqlclient"},"\u521b\u5efaSqlClient"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"JSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    ...doSomething...\n    .builde();\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},"val sqlClient = newKSqlClient {\n    ...doSomething...\n}\n")))),(0,r.kt)("p",null,"SqlClient\u9700\u8981\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e94\u8be5\u88ab\u5168\u5c40\u5171\u4eab\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u6ca1\u6709\u4f7f\u7528Spring\uff0c\u5e94\u8be5\u901a\u8fc7\u9759\u6001\u53d8\u91cf\u5171\u4eab\u5b83\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5982\u679c\u4f7f\u7528\u4e86Spring\uff0c\u5e94\u8be5\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2aSpring\u7684\u5355\u4f8bBean\u5bf9\u8c61\u3002"))),(0,r.kt)("p",null,"\u6beb\u65e0\u7591\u95ee\uff0c\u91c7\u7528Spring/SpringBoot\u51e0\u4e4e\u662f\u6240\u6709\u670d\u52a1\u7aef\u7a0b\u5e8f\u7684\u56fa\u5b9a\u6a21\u5f0f\u3002"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class SqlClientConfig {\n\n    @Bean\n    public JSqlClient sqlClient() {\n        return JSqlClient\n            .newBuilder()\n            ...doSomething...\n            .builde();\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Configuration\nclass SqlClientConfig {\n\n    @Bean\n    fun sqlClient(): KSqlClient =\n        newKSqlClient {\n            ...doSomething...\n        }\n}\n")))),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u6ce8\u5165SqlClient\u5bf9\u8c61\u6765\u4f7f\u7528jimmer-sql\u7684\u6240\u6709\u529f\u80fd\u3002"),(0,r.kt)("h2",{id:"connectionmanager"},"ConnectionManager"),(0,r.kt)("p",null,"jimmer-sql\u4e2d\u4e00\u5207\u53ef\u6267\u884c\u7684\u8bed\u53e5\u548c\u6307\u4ee4\u90fd\u7ee7\u627f\u81ea",(0,r.kt)("inlineCode",{parentName:"p"},"Executable"),"(Java)\u6216",(0,r.kt)("inlineCode",{parentName:"p"},"KExecutable"),"(kotlin)\u63a5\u53e3"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Executable.java"',title:'"Executable.java"'},"package org.babyfish.jimmer.sql.ast;\n\nimport java.sql.Connection;\n\npublic interface Executable<R> {\n\n    R execute();\n\n    R execute(Connection con);\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="KExecutable.kt"',title:'"KExecutable.kt"'},"package org.babyfish.jimmer.sql.kt\n\nimport java.sql.Connection\n\ninterface KExecutable<R> {\n    fun execute(con: Connection? = null): R\n}\n")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"execute(Connection)"),"\uff1a\u5728\u7528\u6237\u6307\u5b9a\u7684JDBC\u8fde\u63a5\u4e0a\u6267\u884c\u3002"),(0,r.kt)("p",{parentName:"li"},"\u4ee5\u67e5\u8be2\u4e3a\u4f8b\uff1a"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BookTable book = BookTable.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .select(book)\n    // highlight-next-line\n    .execute(con);\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun findBooks(con: Connection): List<Book> =\n    sqlClient\n        .createQuery(Book::class) -> {\n            select(table)\n        }\n        // highlight-next-line\n        .execute(con)\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"execute()"),"\u6216",(0,r.kt)("inlineCode",{parentName:"p"},"execute(null)"),"\uff1a\u7531jimmer-sql\u81ea\u4e3b\u51b3\u5b9a\u5728\u67d0\u4e2aJDBC\u8fde\u63a5\u4e0a\u6267\u884c\u3002"),(0,r.kt)("p",{parentName:"li"},"\u4ee5\u67e5\u8be2\u4e3a\u4f8b\uff1a"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public List<Book> findBooks() {\n    BookTable book = BookTable.$;\n\n    List<Book> books = sqlClient\n        .createQuery(book)\n        .select(book)\n        // highlight-next-line\n        .execute();\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"fun findBooks(): List<Book> =\n    sqlClient\n        .createQuery(Book::class) -> {\n            select(table)\n        }\n        // highlight-next-line\n        .execute()\n")))))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"\u8981\u4f7f\u7528\u7b2c1\u79cd\u884c\u4e3a\uff0c\u65e0\u9700\u5bf9SqlClient\u505a\u51fa\u7279\u522b\u914d\u7f6e\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u8981\u4f7f\u7528\u7b2c2\u79cd\u884c\u4e3a\uff0c\u5fc5\u987b\u4e3aSqlClient\u914d\u7f6eConnectionManager\u3002\u5426\u5219\u5c06\u4f1a\u5bfc\u81f4\u5f02\u5e38\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u6beb\u65e0\u7591\u95ee\uff0c\u7b2c2\u79cd\u65b9\u5f0f\u66f4\u7b26\u5408\u4e1a\u52a1\u7cfb\u7edf\u5f00\u53d1\u8981\u6c42\uff0c\u66f4\u63a8\u8350\u5f97\u4f7f\u7528\u3002\u6240\u4ee5\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e3aSqlClient\u914d\u7f6eConnectionManager\u3002")),(0,r.kt)("h3",{id:"\u7b80\u5355\u7684connectionmanager"},"\u7b80\u5355\u7684ConnectionManager"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"javax.sql.DataSource dataSource = ...;\n\nJSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    .setConnectionManager(\n        ConnectionManager\n            // highlight-next-line\n            .simpleConnectionManager(dataSource)\n    )\n    .builde();\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"javax.sql.DataSource dataSource = ...;\n\nvar sqlClient = newKSqlClient {\n    setConnectionManager {\n        ConnectionManager\n            dataSoruce.connection.use {\n                // highlight-next-line\n                proceed(it)\n            }\n    }\n}\n")))),(0,r.kt)("admonition",{type:"danger"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"ConnectionManager.simpleConnectionManager"),"\u4ec5\u8d1f\u8d23\u4eceDataSource\u83b7\u53d6\u8fde\u63a5\uff0c\u5e76\u6ca1\u6709\u4e8b\u52a1\u7ba1\u7406\u673a\u5236\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u8fd9\u79cd\u65b9\u5f0f\u4ec5\u9002\u7528\u4e8e\u6ca1\u6709\u4f7f\u7528Spring\u7684\u573a\u5408\uff0c\u9664\u5b66\u4e60\u548c\u5c1d\u8bd5\u5916\uff0c\u4e0d\u5efa\u8bae\u5728\u5b9e\u9645\u9879\u76ee\u4f7f\u7528simpleConnectionManager\u3002")),(0,r.kt)("h3",{id:"\u53d7spring\u4e8b\u52a1\u7ba1\u7406\u7684connectionmanager"},"\u53d7Spring\u4e8b\u52a1\u7ba1\u7406\u7684ConnectionManager"),(0,r.kt)("p",null,"\u6b63\u5982\u524d\u6587\u6240\u8bf4\uff0c\u91c7\u7528Spring/SpringBoot\u51e0\u4e4e\u662f\u6240\u6709\u670d\u52a1\u7aef\u7a0b\u5e8f\u7684\u56fa\u5b9a\u6a21\u5f0f\u3002"),(0,r.kt)("p",null,"jimmer-sql\u53ea\u4e13\u6ce8\u4e8e\u751f\u6210SQL\u548c\u6267\u884cSQL\uff0c\u5728\u8fde\u63a5\u7ba1\u7406\u548c\u4e8b\u52a1\u7ba1\u7406\u65b9\u9762\uff0c\u4e0d\u60f3\u5f00\u53d1\u548cSpring/SpringBoot\u91cd\u590d\u7684\u529f\u80fd\uff0c\u66f4\u4e0d\u60f3\u56e0\u6b64\u589e\u52a0\u548cSpring/SpringBoot\u6574\u5408\u7684\u96be\u5ea6\u3002"),(0,r.kt)("p",null,"\u5f53\u4f60\u4f7f\u7528\u4e86spring-jdbc\u540e\uff0c\u53ef\u4ee5\u57fa\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"org.springframework.jdbc.datasource.DataSourceUtils"),"\u5b9e\u73b0ConnectionManager\uff0c\u8fd9\u6837jimmer-sql\u5c31\u53d7\u5230Spring\u4e8b\u52a1\u7684\u7ba1\u7406\u4e86\u3002"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic JSqlClient sqlClient(DataSource dataSource) {\n    return JSqlClient.newBuilder()\n        .setConnectionManager(\n            new ConnectionManager() {\n                @Override\n                public <R> R execute(\n                    Function<Connection, R> block\n                ) {\n                    Connection con = DataSourceUtils\n                        // highlight-next-line\n                        .getConnection(dataSource);\n                    try {\n                        return block.apply(con);\n                    } finally {\n                        DataSourceUtils\n                            // highlight-next-line\n                            .releaseConnection(con, dataSource);\n                    }\n                }\n            }\n        )\n        .build();\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Bean\nfun sqlClient(dataSource: DataSource): KSqlClient =\n    newKSqlClient {\n        setConnectionManager {\n            val con = DataSourceUtils\n                // highlight-next-line\n                .getConnection(dataSource)\n            try {\n                proceed(con)\n            } finally {\n                DataSourceUtils\n                    // highlight-next-line\n                    .releaseConnection(con, dataSource)\n            }\n        }\n    }\n")))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u8ba9jimmer-sql\u53d7\u5230Spring\u4e8b\u52a1\u7684\u7ba1\u7406\uff0c\u662f\u63a8\u8350\u7528\u6cd5\u3002")),(0,r.kt)("h2",{id:"dialect"},"Dialect"),(0,r.kt)("p",null,"\u548c\u5927\u90e8\u5206ORM\u4e00\u6837\uff0c\u9700\u8981\u4e3a\u4e0d\u540c\u7684\u6570\u636e\u5e93\u8bbe\u7f6e\u4e0d\u540c\u7684\u65b9\u8a00\u3002\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u652f\u6301\u7684\u65b9\u8a00\u5982\u4e0b:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"org.babyfish.jimmer.sql.dialect.H2Dialect"),(0,r.kt)("li",{parentName:"ul"},"org.babyfish.jimmer.sql.dialect.MySqlDialect"),(0,r.kt)("li",{parentName:"ul"},"org.babyfish.jimmer.sql.dialect.PostgresDialect"),(0,r.kt)("li",{parentName:"ul"},"org.babyfish.jimmer.sql.dialect.OracleDialect"),(0,r.kt)("li",{parentName:"ul"},"org.babyfish.jimmer.sql.dialect.SqlServerDialect")),(0,r.kt)("p",null,"\u4ee5H2\u4e3a\u4f8b\uff0c\u65b9\u8a00\u8bbe\u7f6e\u5982\u4e0b"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic JSqlClient sqlClient() {\n    return JSqlClient\n        .newBuilder()\n        .setConnectionManager(...)\n        // highlight-next-line\n        .setDialect(new H2Dialect())\n        .build();\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\nfun sqlClient(): KSqlClient =\n    newKSqlClient {\n        setConnectionManager { ... }\n        // highlight-next-line\n        setDialect(H2Dialect())\n    }\n")))),(0,r.kt)("h2",{id:"executor"},"Executor"),(0,r.kt)("p",null,"Executor\u662fjimmer-sql\u6267\u884c\u6700\u7ec8SQL\u7684\u5165\u53e3\uff0c\u4f5c\u4e3aSQL\u6267\u884c\u7684\u62e6\u622a\u5668\u3002"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u8bbe\u7f6eExecutor\u662f\u53ef\u9009\u884c\u4e3a\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Executor.java"',title:'"Executor.java"'},"package org.babyfish.jimmer.sql.runtime;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.util.List;\n\npublic interface Executor {\n\n    <R> R execute(\n            Connection con,\n            String sql,\n            List<Object> variables,\n            ExecutionPurpose purpose,\n            StatementFactory factory,\n            SqlFunction<PreparedStatement, R> block\n    );\n}\n")),(0,r.kt)("p",null,"\u6b64\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"execute"),"\u65b9\u6cd5"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"con"),": SQL\u57fa\u4e8e\u6b64\u8fde\u63a5\u6267\u884c")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"sql"),": \u5373\u5c06\u88ab\u6267\u884c\u7684SQL\u8bed\u53e5")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"variables"),": \u5373\u5c06\u88ab\u6267\u884c\u7684SQL\u6240\u9644\u5e26\u7684\u53c2\u6570"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a"),(0,r.kt)("p",{parentName:"blockquote"},"\u8be5\u5217\u8868\u4e0d\u53ef\u80fd\u5305\u542bnull\uff0c\u6240\u6709\u7684null\u503c\u90fd\u88ab\u4e8b\u5148\u66ff\u6362\u6210\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.sql.runtime.DbNull"),"\u7c7b\u578b\u7684\u5bf9\u8c61\u3002"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"purpose"),": SQL\u88ab\u6267\u884c\u7684\u76ee\u7684\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"factory"),": \u5982\u4f55\u521b\u5efaJDBC prepared statement\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"block"),": \u5c06\u8981\u6267\u884c\u7684\u5b9e\u8d28\u6027\u64cd\u4f5c\u3002"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a"),(0,r.kt)("p",{parentName:"blockquote"},"\u4e0d\u8981\u5728\u81ea\u5b9a\u4e49Executor\u4e2d\u76f4\u63a5\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"block"),"\uff0c\u5e94\u8be5\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"org.babyfish.jimmer.sql.runtime.DefaultExecutor"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"execute"),"\u65b9\u6cd5\u3002")))),(0,r.kt)("p",null,"\u9ed8\u8ba4\u7684DefaultExecutor\u5df2\u7ecf\u53ef\u80dc\u4efb\u6240\u6709\u5de5\u4f5c\uff0c\u6240\u4ee5\u6307\u5b9a\u81ea\u5b9a\u4e49Exector\u662f\u53ef\u9009\u7684\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u9047\u5230\u4ee5\u4e0b\u573a\u666f\u4e4b\u4e00\uff0c\u5c31\u53ef\u4ee5\u6307\u5b9a\u81ea\u5b9a\u4e49Executor\uff0c\u8986\u76d6\u9ed8\u8ba4\u7684DefaultExecutor\u3002"),(0,r.kt)("h3",{id:"\u5728\u65e5\u5fd7\u4e2d\u6253\u5370sql\u8bed\u53e5\u548c\u5176\u53c2\u6570"},"\u5728\u65e5\u5fd7\u4e2d\u6253\u5370SQL\u8bed\u53e5\u548c\u5176\u53c2\u6570"),(0,r.kt)("p",null,"\u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4fbf\u6377\u7684\u65b9\u5f0f"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class SqlClientConfig {\n\n    private static final Logger LOGGER = \n        LoggerFactory.getLogger(SqlClientConfig.class);\n\n    @Bean\n    public JSqlClient sqlClient() {\n        return JSqlClient\n            .newBuilder()\n            .setConnectionManager(...)\n            .setDialect(new H2Dialect())\n            // highlight-next-line\n            .setExecutor(Executor.log())\n            .build();\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Configuration\nclass SqlClientConfig {\n\n    @Bean\n    fun sqlClient() = \n        newKSqlClient {\n            setConnectionManager { ... }\n            setDialect(H2Dialect())\n            // highlight-next-line\n            setExecutor(Executor.log())\n        }\n}\n\nprivate val LOGGER = \n    LoggerFactory.getLogger(SqlClientConfig::class.java)\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53ef\u63a7\u6027\u9ad8\u7684\u65b9\u5f0f"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class SqlClientConfig {\n\n    private static final Logger LOGGER = \n        LoggerFactory.getLogger(SqlClientConfig.class);\n\n    @Bean\n    public JSqlClient sqlClient() {\n        return JSqlClient\n            .newBuilder()\n            .setConnectionManager(...)\n            .setDialect(new H2Dialect())\n            // highlight-next-line\n            .setExecutor(\n                new Executor() {\n                    @Override\n                    public <R> R execute(\n                            Connection con,\n                            String sql,\n                            List<Object> variables,\n                            ExecutionPurpose purpose,\n                            StatementFactory factory,\n                            SqlFunction<PreparedStatement, R> block\n                    ) {\n                        // Log SQL and variables.\n                        LOGGER.info(\n                            "Execute sql : \\"{}\\", " +\n                            ", variables: {}, purpose: {}", \n                            sql, \n                            variables,\n                            purpose\n                        );\n                        // Call DefaultExecutor\n                        // highlight-next-line\n                        return DefaultExecutor\n                            .INSTANCE\n                            .execute(\n                                con,\n                                sql,\n                                variables,\n                                purpose,\n                                factory,\n                                block\n                            );\n                    }\n                }\n            )\n            .build();\n    }\n}\n'))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Configuration\nclass SqlClientConfig {\n\n    @Bean\n    fun sqlClient() = \n        newKSqlClient {\n            setConnectionManager { ... }\n            setDialect(H2Dialect())\n            // highlight-next-line\n            setExecutor {\n                // Log SQL and variables.\n                LOGGER.info(\n                    "Execute sql : \\"{}\\", " +\n                    "with variables: {}, purpose: {}", \n                    sql, \n                    variables,\n                    purpose\n                );\n                // Call DefaultExecutor\n                // highlight-next-line\n                proceed()\n            }\n        }\n}\n\nprivate val LOGGER = \n    LoggerFactory.getLogger(SqlClientConfig::class.java)\n')))))),(0,r.kt)("h3",{id:"\u641c\u96c6\u6267\u884c\u7f13\u6162\u7684sql\u4ee5\u6c42\u6539\u8fdb"},"\u641c\u96c6\u6267\u884c\u7f13\u6162\u7684SQL\u4ee5\u6c42\u6539\u8fdb"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class SqlClientConfig {\n\n    private static final Logger LOGGER = \n        LoggerFactory.getLogger(SqlClientConfig.class);\n\n    @Bean\n    public JSqlClient sqlClient() {\n        return JSqlClient\n            .newBuilder()\n            .setConnectionManager(...)\n            .setDialect(new H2Dialect())\n            // highlight-next-line\n            .setExecutor(\n                new Executor() {\n                    @Override\n                    public <R> R execute(\n                            Connection con,\n                            String sql,\n                            List<Object> variables,\n                            ExecutionPurpose purpose,\n                            StatementFactory factory,\n                            SqlFunction<PreparedStatement, R> block\n                    ) {\n                        long millis = System.currentTimeMillis();\n                        // Call DefaultExecutor\n                        // highlight-next-line\n                        R result = DefaultExecutor\n                            .INSTANCE\n                            .execute(\n                                con,\n                                sql,\n                                variables,\n                                purpose,\n                                factory,\n                                block\n                            );\n                        millis = System.currentTimeMillis() - millis;\n                        if (millis > 1000) { // Slow SQL\n                            ...sendMessageToTechTeam...\n                        }\n                        return result;\n                    }\n                }\n            )\n            .build();\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Configuration\nclass SqlClientConfig {\n\n    @Bean\n    fun sqlClient(): KSqlClient = \n        newKSqlClient {\n            setConnectionManager { ... }\n            setDialect(H2Dialect())\n            // highlight-next-line\n            setExecutor {\n                val millis = System.currentTimeMillis()\n                // Call DefaultExecutor\n                // highlight-next-line\n                proceed()\n                millis = System.currentTimeMillis() - millis\n                if (millis > 1000) { // Slow SQL\n                    ...sendMessageToTechTeam...\n                }\n            }\n        }\n}\n\nprivate val LOGGER = \n    LoggerFactory.getLogger(SqlClientConfig::class.java)\n")))),(0,r.kt)("h2",{id:"scalarprovider"},"ScalarProvider\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u4e3aSqlClient\u6dfb\u52a0\u591a\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"ScalarProvider"),"\uff0c\u6bcf\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"ScalarProvider"),"\u544a\u8bc9Jimmer\u5982\u4f55\u5904\u7406\u4e00\u79cd\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ScalarProvider"),"\u5b9a\u4e49\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="ScalarProvider"',title:'"ScalarProvider"'},"package org.babyfish.jimmer.sql.runtime;\n\nimport java.util.function.Consumer;\n\npublic abstract class ScalarProvider<T, S> {\n\n    protected ScalarProvider(Class<T> scalarType, Class<S> sqlType) {\n        this.scalarType = scalarType;\n        this.sqlType = sqlType;\n    }\n\n    public abstract T toScalar(S sqlValue);\n\n    public abstract S toSql(T scalarValue);\n }\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8303\u578b\u53c2\u6570",(0,r.kt)("inlineCode",{parentName:"li"},"T"),": Java\u4e2d\u6570\u636e\u7c7b\u578b"),(0,r.kt)("li",{parentName:"ul"},"\u8303\u578b\u53c2\u6570",(0,r.kt)("inlineCode",{parentName:"li"},"S"),": \u6570\u636e\u5e93\u4e2d\u6570\u636e\u7c7b\u578b"),(0,r.kt)("li",{parentName:"ul"},"\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"li"},"toScalar"),": \u628a\u6570\u636e\u5e93\u4e2d\u8bfb\u53d6\u5230\u7684\u975enull\u6570\u636e\u8f6c\u6362\u4e3aJava\u6570\u636e"),(0,r.kt)("li",{parentName:"ul"},"\u65b9\u6cd5",(0,r.kt)("inlineCode",{parentName:"li"},"toSql"),": \u628aJava\u7684\u975enull\u6570\u636e\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u53ef\u63a5\u53d7\u7684\u6570\u636e")),(0,r.kt)("h3",{id:"\u81ea\u5b9a\u4e49scalarprovider"},"\u81ea\u5b9a\u4e49ScalarProvider"),(0,r.kt)("p",null,"\u4f8b\u5982\u5f53\u524d\u6570\u636e\u5e93\u4e0d\u652f\u6301UUID\u7c7b\u578b\uff0c\u53ef\u4ee5\u5982\u6b64\u5904\u7406"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic JSqlClient sqlClient() {\n    return JSqlClient\n        .newBuilder()\n        .setConnectionManager(...)\n        .setDialect(new H2Dialect())\n        .setExecutor(...)\n        // highlight-next-line\n        .addScalarProvider(\n            new ScalarProvider<>(\n                UUID.class,\n                String.class\n            ) {\n                @Override\n                public UUID toScalar(String sqlValue) {\n                    return UUID.fromString(sqlValue);\n                }\n\n                @Override\n                public String toSql(UUID scalarValue) {\n                    return scalarValue.toString();\n                }\n            }\n        )\n        .build();\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Bean\nfun sqlClient() : KSqlClient = \n    newKSqlClient {\n        setConnectionManager { ... }\n        setDialect(H2Dialect())\n        setExecutor { ... }\n        // highlight-next-line\n        addScalarProvider(\n            object: ScalarProvider(\n                UUID.class,\n                String.class\n            ) {\n                override fun toScalar(sqlValue: Strng): UUID =\n                    UUID.fromString(sqlValue)\n\n                override fun toSql(scalarValue: UUID): String =\n                    scalarValue.toString()\n            }\n        )\n    }\n")))),(0,r.kt)("h3",{id:"\u5185\u7f6e\u7684scalarprovider"},"\u5185\u7f6e\u7684ScalarProvider"),(0,r.kt)("p",null,"jimmer-sql\u5185\u7f6e\u4e86\u679a\u4e3e\u6240\u9700\u7684ScalarProvider\u3002"),(0,r.kt)("p",null,"\u5047\u8bbe\u6709\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff1a"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="GcObjColor.java"',title:'"GcObjColor.java"'},"public enum GcObjColor { \n    WHITE, \n    GRAY, \n    BLACK \n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="GcObjColor.kt"',title:'"GcObjColor.kt"'},"enum class GcObjColor { \n    WHITE, \n    GRAY, \n    BLACK \n}\n")))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6309\u679a\u4e3e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"name()"),"\u6620\u5c04\u4e3a\u5b57\u7b26\u4e32"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"return JSqlBuilder\n    .newBuilder()\n    .addScalarProvider(\n        // highlight-next-line\n        ScalarProvider.enumProviderByString(\n            GcObjColor.class\n        )\n    )\n    ...doOtherthings...\n    .build();\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"return newKSqlClient {\n    addScalarProvider(\n        // highlight-next-line\n        ScalarProvider.enumProviderByString(\n            GcObjColor::class.java\n        )\n    )\n    ...doOtherthings...\n}\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6309\u679a\u4e3e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"name()"),"\u6620\u5c04\u4e3a\u5b57\u7b26\u4e32\uff0c\u4f46\u628a",(0,r.kt)("inlineCode",{parentName:"p"},"GRAY"),"\u6620\u5c04\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"GREY")),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'return JSqlBuilder\n    .newBuilder()\n    .addScalarProvider(\n        ScalarProvider.enumProviderByString(\n            GcObjColor.class, \n            // highlight-next-line\n            it -> it.map(GcObjColor.GRAY, "GREY")\n        )\n    )\n    ...doOtherthings...\n    .build();\n'))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'return newKSqlClient {\n    addScalarProvider(\n        ScalarProvider.enumProviderByString(\n            GcObjColor::class.java\n        ) {\n            // highlight-next-line\n            it.map(GcObjColor.GRAY, "GREY")\n        }\n    )\n    ...doOtherthings...\n}\n'))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6309\u679a\u4e3e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"ordinal()"),"\u6620\u5c04\u4e3a\u6574\u6570"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"return SqlBuilder\n    .newBuilder()\n    .addScalarProvider(\n        // highlight-next-line\n        ScalarProvider.enumProviderByInt(\n            GcObjColor.class\n        )\n    )\n    ...doOtherthings...\n    .build();\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"return newKSqlClient {\n    addScalarProvider(\n        // highlight-next-line\n        ScalarProvider.enumProviderByInt(\n            GcObjColor::class.java\n        )\n    )\n    ...doOtherthings...\n}\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6309\u679a\u4e3e\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"ordinal()"),"\u6620\u5c04\u4e3a\u6574\u6570\uff0c\u4f46\u628a",(0,r.kt)("inlineCode",{parentName:"p"},"BLACK"),"\u6620\u5c04\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"3"),(0,r.kt)("em",{parentName:"p"},"\uff08\u9ed8\u8ba4\u662f2\uff09")),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"return JSqlBuilder\n    .newBuilder()\n    .addScalarProvider(\n        ScalarProvider.enumProviderByInt(\n            GcObjColor.class, \n            // highlight-next-line\n            it -> it.map(GcObjColor.GRAY, 3)\n        )\n    )\n    ...doOtherthings...\n    .build();\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"return newKSqlClient {\n    addScalarProvider(\n        ScalarProvider.enumProviderByInt(\n            GcObjColor::class.java\n        ) {\n            // highlight-next-line\n            it.map(GcObjColor.GRAY, 3)\n        }\n    )\n    ...doOtherthings...\n}\n")))))),(0,r.kt)("h2",{id:"idgenerator"},"IdGenerator"),(0,r.kt)("p",null,"\u53ef\u4ee5\u52a8\u6001\u5730\u8bbe\u7f6e\u5bf9\u8c61\u7684id\u751f\u6210\u7b56\u7565\u3002"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cid\u751f\u6210\u7b56\u7565\u5e94\u8be5\u5728\u5b9e\u4f53\u63a5\u53e3\u4e2d\u9759\u6001\u5730\u4f7f\u7528\u6ce8\u89e3",(0,r.kt)("inlineCode",{parentName:"p"},"@org.babyfish.jimmer.sql.GeneratedValue"),"\u914d\u7f6e\uff0c\u53ef\u4ee5\u53c2\u8003",(0,r.kt)("a",{parentName:"p",href:"./mapping#generatedvalue"},"\u6620\u5c04"),"\u4ee5\u4e86\u89e3\u66f4\u591a\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u63d0\u4f9b\u5728SqlClient\u4e2d\u52a8\u6001\u6307\u5b9aid\u751f\u6210\u5668\u7684\u529f\u80fd\u5462\uff1f"),(0,r.kt)("p",{parentName:"admonition"},"SqlClient\u4e2d\u52a8\u6001\u6307\u5b9aIdGenerator\u53ef\u4ee5\u8986\u76d6\u5b9e\u4f53\u6587\u4ef6\u4e2d\u6ce8\u89e3",(0,r.kt)("inlineCode",{parentName:"p"},"@org.babyfish.jimmer.sql.GeneratedValue"),"\u7684\u9759\u6001\u914d\u7f6e\uff0c\u8fd9\u5bf9\u5355\u5143\u6d4b\u8bd5\u975e\u5e38\u6709\u7528\u3002")),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="UnitTestIdGenerator.java"',title:'"UnitTestIdGenerator.java"'},"public class UnitTestIdGenerator implements UserIdGenerator {\n\n    private final Iterator<Object> preAllocatedIdItr;\n    \n    public UnitTestIdGenerator(Object ... preAllocatedIds) {\n        preAllocatedIdItr = Arrays\n                .asList(preAllocatedIds)\n                .iterator();\n    }\n\n    @Override\n    public Object generate(Class<?> entityType) {\n        return preAllocatedIdItr.next();\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="UnitTestIdGenerator.kt"',title:'"UnitTestIdGenerator.kt"'},"class UnitTestIdGenerator(\n    vararg preAllocatedIds Any\n) : UserIdGenerator {\n    \n    private val preAllocatedIdItr = preAllocatedIds.iterator()\n    \n    override fun generate(entityType: Class<*>): Any =\n        preAllocatedIdItr.next()\n}\n")))),(0,r.kt)("p",null,"\u7136\u540e\uff0c\u4f60\u53ef\u4ee5\u5982\u6b64\u4f7f\u7528"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyTest.java"',title:'"MyTest.java"'},"public class MyTest {\n\n    private JSqlClient sqlClient;\n\n    @BeforeEach\n    public void init() {\n        sqlClient = JSqlClient\n            .newBuilder()\n            // highlight-next-line\n            .setIdGenerator(\n                Department.class,\n                new UnitTestIdGenerator(51L, 52L, 53L)\n            )\n            // highlight-next-line\n            .setIdGenerator(\n                Employee.class,\n                new UnitTestIdGenerator(100L, 101L)\n            )\n            // highlight-next-line\n            .setIdGenerator(\n                // For other entity types\n                new UnitTestIdGenerator(1L, 2L, 3L, 4L)\n            )\n            .build();\n    }\n\n    @Test\n    public void test() {\n        // TODO: Add unit test code here\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="MyTest.kt"',title:'"MyTest.kt"'},"class MyTest {\n\n    private lateinit var sqlClient: KSqlClient\n\n    @Before\n    fun init() {\n        sqlClient = newKSqlClient {\n            // highlight-next-line\n            setIdGenerator(\n                Department::class,\n                new UnitTestIdGenerator(51L, 52L, 53L)\n            )\n            // highlight-next-line\n            setIdGenerator(\n                Employee::class,\n                new UnitTestIdGenerator(100L, 101L)\n            )\n            // highlight-next-line\n            setIdGenerator(\n                // For other entity types\n                new UnitTestIdGenerator(1L, 2L, 3L, 4L)\n            )\n        }\n    }\n\n    @Test\n    fun test() {\n        // TODO: Add unit test code here\n    }\n}\n")))),(0,r.kt)("h2",{id:"defaultbatchsize\u548cdefaultlistbatchsize"},"DefaultBatchSize\u548cDefaultListBatchSize"),(0,r.kt)("p",null,"SqlClient\u652f\u6301\u4e24\u4e2a\u914d\u7f6e\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultBatchSize"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultListBatchSize"),"\u3002"),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Bean\npublic JSqlClient sqlClient() {\n    return JSqlClient\n        .newBuilder()\n        .setConnectionManager(...)\n        .setDialect(new H2Dialect())\n        .setExecutor(...)\n        .addScalarProvider(...)\n        // highlight-next-line\n        .setDefaultBatchSize(256)\n        // highlight-next-line\n        .setDefaultListBatchSize(32)\n        .build();\n}\n"))),(0,r.kt)(o.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@Bean\nfun sqlClient(): KSqlClient = \n    newKSqlClient {\n        setConnectionManager { ... }\n        setDialect(H2Dialect())\n        setExecutor { ... }\n        addScalarProvider { ... }\n        // highlight-next-line\n        setDefaultBatchSize(256)\n        // highlight-next-line\n        setDefaultListBatchSize(32)\n    }\n")))),(0,r.kt)("p",null,"\u5177\u4f53\u7684\u4f5c\u7528\u5728",(0,r.kt)("a",{parentName:"p",href:"../query/fetcher#batchsize"},"\u5bf9\u8c61\u6293\u53d6\u5668"),"\u4e2d\u505a\u4e86\u8be6\u7ec6\u7684\u63cf\u8ff0\uff0c\u672c\u6587\u4e0d\u91cd\u590d\u9610\u8ff0\u3002"),(0,r.kt)("h2",{id:"\u7f13\u5b58"},"\u7f13\u5b58"),(0,r.kt)("p",null,"SqlClient\u652f\u6301\u4e00\u4e2a\u914d\u7f6e\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"setCaches"),"\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7f13\u5b58\u3002"),(0,r.kt)("p",null,"\u56e0\u4e3a\u6709\u72ec\u7acb\u7684\u6587\u7ae0\u8ba8\u8bba\u7f13\u5b58\uff0c\u672c\u6587\u4e0d\u4e88\u4ee5\u8ba8\u8bba\uff0c\u8bf7\u53c2\u89c1",(0,r.kt)("a",{parentName:"p",href:"../advanced/cache"},"\u5916\u90e8\u7f13\u5b58"),"\u3002"))}k.isMDXComponent=!0}}]);