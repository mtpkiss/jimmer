"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[2245],{3905:function(e,n,t){t.d(n,{Zo:function(){return b},kt:function(){return m}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},b=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=l,k=p["".concat(i,".").concat(m)]||p[m]||c[m]||r;return t?a.createElement(k,o(o({ref:n},b),{},{components:t})):a.createElement(k,o({ref:n},b))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(67294),l=t(34334),r="tabItem_Ymn6";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:t},n)}},65488:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(83117),l=t(67294),r=t(34334),o=t(72389),s=t(67392),i=t(7094),u=t(12466),b="tabList__CuJ",c="tabItem_LNqP";function p(e){var n,t,o=e.lazy,p=e.block,m=e.defaultValue,k=e.values,_=e.groupId,d=e.className,h=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=k?k:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,s.l)(g,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(n=null!=m?m:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:h[0].props.value;if(null!==y&&!g.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var T=(0,i.U)(),f=T.tabGroupChoices,x=T.setTabGroupChoices,N=(0,l.useState)(y),I=N[0],O=N[1],E=[],B=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=_){var q=f[_];null!=q&&q!==I&&g.some((function(e){return e.value===q}))&&O(q)}var w=function(e){var n=e.currentTarget,t=E.indexOf(n),a=g[t].value;a!==I&&(B(n),O(a),null!=_&&x(_,String(a)))},A=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,l=E.indexOf(e.currentTarget)+1;t=null!=(a=E[l])?a:E[0];break;case"ArrowLeft":var r,o=E.indexOf(e.currentTarget)-1;t=null!=(r=E[o])?r:E[E.length-1]}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",b)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},d)},g.map((function(e){var n=e.value,t=e.label,o=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:I===n?0:-1,"aria-selected":I===n,key:n,ref:function(e){return E.push(e)},onKeyDown:A,onFocus:w,onClick:w},o,{className:(0,r.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":I===n})}),null!=t?t:n)}))),o?(0,l.cloneElement)(h.filter((function(e){return e.props.value===I}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==I})}))))}function m(e){var n=(0,o.Z)();return l.createElement(p,(0,a.Z)({key:String(n)},e))}},15593:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return b},default:function(){return _},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return m}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),o=t(65488),s=t(85162),i=["components"],u={sidebar_position:1,title:"\u5b50\u67e5\u8be2"},b=void 0,c={unversionedId:"jimmer-sql/query/sub-query",id:"jimmer-sql/query/sub-query",title:"\u5b50\u67e5\u8be2",description:"\u6709\u7c7b\u578b\u5b50\u67e5\u8be2",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/jimmer-sql/query/sub-query.mdx",sourceDirName:"jimmer-sql/query",slug:"/jimmer-sql/query/sub-query",permalink:"/jimmer/zh/docs/jimmer-sql/query/sub-query",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/jimmer-sql/query/sub-query.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"\u5b50\u67e5\u8be2"},sidebar:"tutorialSidebar",previous:{title:"\u67e5\u8be2",permalink:"/jimmer/zh/docs/jimmer-sql/query/"},next:{title:"\u5206\u9875\u67e5\u8be2",permalink:"/jimmer/zh/docs/jimmer-sql/query/pagination"}},p={},m=[{value:"\u6709\u7c7b\u578b\u5b50\u67e5\u8be2",id:"\u6709\u7c7b\u578b\u5b50\u67e5\u8be2",level:2},{value:"\u57fa\u4e8e\u5355\u5217\u7684IN\u8868\u8fbe\u5f0f",id:"\u57fa\u4e8e\u5355\u5217\u7684in\u8868\u8fbe\u5f0f",level:3},{value:"\u57fa\u4e8e\u591a\u5217\u7684IN\u8868\u8fbe\u5f0f",id:"\u57fa\u4e8e\u591a\u5217\u7684in\u8868\u8fbe\u5f0f",level:3},{value:"\u5c06\u5b50\u67e5\u8be2\u89c6\u4e3a\u7b80\u5355\u503c",id:"\u5c06\u5b50\u67e5\u8be2\u89c6\u4e3a\u7b80\u5355\u503c",level:3},{value:"\u5728select\u548corderBy\u5b50\u53e5\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2",id:"\u5728select\u548corderby\u5b50\u53e5\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2",level:3},{value:"\u4f7f\u7528any\u8fd0\u7b97\u7b26",id:"\u4f7f\u7528any\u8fd0\u7b97\u7b26",level:3},{value:"\u4f7f\u7528all\u8fd0\u7b97\u7b26",id:"\u4f7f\u7528all\u8fd0\u7b97\u7b26",level:3},{value:"\u4f7f\u7528exists\u8fd0\u7b97\u7b26",id:"\u4f7f\u7528exists\u8fd0\u7b97\u7b26",level:3},{value:"\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2",id:"\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2",level:2}],k={toc:m};function _(e){var n=e.components,t=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u6709\u7c7b\u578b\u5b50\u67e5\u8be2"},"\u6709\u7c7b\u578b\u5b50\u67e5\u8be2"),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u5355\u5217\u7684in\u8868\u8fbe\u5f0f"},"\u57fa\u4e8e\u5355\u5217\u7684IN\u8868\u8fbe\u5f0f"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(\n        book.id().in(sqlClient\n            .createSubQuery(author)\n            .where(author.firstName().eq("Alex"))\n            .select(author.books().id())\n        )\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where( \n            // highlight-next-line\n            table.id valueIn subQuery(Author::class) {\n                where(table.firstName eq "Alex")\n                select(table.books.id)\n            }\n        )\n        select(table)    \n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere \n    /* highlight-next-line */\n    tb_1_.ID in (\n        select \n            tb_3_.BOOK_ID \n        from AUTHOR as tb_2_ \n        inner join BOOK_AUTHOR_MAPPING as tb_3_ \n            on tb_2_.ID = tb_3_.AUTHOR_ID \n        where \n            tb_2_.FIRST_NAME = ?\n    )\n\n")),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u591a\u5217\u7684in\u8868\u8fbe\u5f0f"},"\u57fa\u4e8e\u591a\u5217\u7684IN\u8868\u8fbe\u5f0f"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BookTable book = BookTable.$;\n\nList<Book> newestBooks = sqlClient\n    .createQuery(book)\n    .where(\n        Expression.tuple(\n            book.name(),\n            book.edition()\n        ).in(sqlClient\n            .createSubQuery(book)\n            .groupBy(book.name())\n            .select(\n                book.name(),\n                book.edition().max()\n            )\n        )\n    )\n    .select(book)\n    .execute();\n"))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val newestBooks = sqlClient\n    .createQuery(Book::class) {\n        where( \n            // highlight-next-line\n            tuple(\n                table.name, \n                table.edition\n            ) valueIn subQuery(Book::class) {\n                groupBy(table.name)\n                select(\n                    table.name,\n                    max(table.edition).asNonNull()\n                )\n            }\n        )\n        select(table)\n    }\n    .execute()\n")))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere \n    /* highlight-next-line */\n    (tb_1_.NAME, tb_1_.EDITION) in (\n        select \n            tb_2_.NAME, \n            max(tb_2_.EDITION) \n            from BOOK as tb_2_ \n            group by tb_2_.NAME\n    )\n")),(0,r.kt)("h3",{id:"\u5c06\u5b50\u67e5\u8be2\u89c6\u4e3a\u7b80\u5355\u503c"},"\u5c06\u5b50\u67e5\u8be2\u89c6\u4e3a\u7b80\u5355\u503c"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BookTable book = BookTable.$;\n\nList<Book> newestBooks = sqlClient\n    .createQuery(book)\n    .where(\n        book.price().gt(sqlClient\n            .createSubQuery(book)\n            .groupBy(book.name())\n            .select(\n                book\n                    .price()\n                    .avg()\n                    .coalesce(BigDecimal.ZERO)\n            )\n        )\n    )\n    .select(book)\n    .execute();\n"))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val books = sqlClient\n    .createQuery(Book::class) {\n        where( \n            // highlight-next-line\n            table.price gt subQuery(Book::class) {\n                select(\n                    avg(table.price)\n                        .coalesce(BigDecimal.ZERO)\n                )\n            }\n        )\n        select(table)\n    }\n    .execute()\n")))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere \n    /* highlight-next-line */\n    tb_1_.PRICE > (\n        select \n            coalesce(avg(tb_2_.PRICE), ?) \n        from BOOK as tb_2_\n    )\n")),(0,r.kt)("h3",{id:"\u5728select\u548corderby\u5b50\u53e5\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2"},"\u5728select\u548corderBy\u5b50\u53e5\u4e2d\u4f7f\u7528\u5b50\u67e5\u8be2"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BookStoreTable store = BookStoreTable.$;\nBookTable book = BookTable.$;\n\nMutableRootQuery<BookStoreTable> query =\n    sqlClient.createQuery(store);\nTypedSubQuery<BigDecimal> subQuery =\n    sqlClient\n        .createSubQuery(book)\n        .where(book.store().eq(store))\n        .select(\n            book\n                .price()\n                .avg()\n                .coalesce(BigDecimal.ZERO)\n        );\nList<Tuple2<BookStore, BigDecimal>> storeAvgPriceTuples =\n    query\n        \n        .orderBy(\n            // highlight-next-line\n            subQuery.desc()\n        )\n        .select(\n            store, \n            // highlight-next-line\n            subQuery\n        )\n        .execute();\n"))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val storeAvgPriceTuples = sqlClient\n    .createQuery(BookStore::class) {\n        val avgPriceSubQuery = subQuery(Book::class) {\n            where(table.store eq parentTable)\n            select(avg(table.price))\n        }\n        \n        orderBy(\n            // highlight-next-line\n            avgPriceSubQuery.desc()\n        )\n        select(\n            table,\n            // highlight-next-line\n            avgPriceSubQuery\n        )\n    }\n    .execute()\n")))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.WEBSITE, \n    (\n        /* highlight-next-line */\n        select coalesce(avg(tb_2_.PRICE), ?) \n        from BOOK as tb_2_\n    ) \nfrom BOOK_STORE as tb_1_ \norder by (\n    /* highlight-next-line */\n    select coalesce(avg(tb_2_.PRICE), ?) \n    from BOOK as tb_2_\n) desc\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528any\u8fd0\u7b97\u7b26"},"\u4f7f\u7528any\u8fd0\u7b97\u7b26"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(\n        book.id().eq(sqlClient\n            .createSubQuery(author)\n            .where(\n                author.firstName().in(\n                    Arrays.asList("Alex", "Bill")\n                )\n            )\n            .select(author.books().id())\n            // highlight-next-line\n            .any()\n        )\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            // highlight-next-line\n            table.id eq any(\n                subQuery(Author::class) {\n                    where(\n                        table.firstName valueIn listOf(\n                            "Alex",\n                            "Bill"\n                        )\n                    )\n                    select(table.id)\n                }\n            )\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere tb_1_.ID = \n    /* highlight-next-line */\n    any(\n        select \n            tb_3_.BOOK_ID \n        from AUTHOR as tb_2_ \n        inner join BOOK_AUTHOR_MAPPING as tb_3_ \n            on tb_2_.ID = tb_3_.AUTHOR_ID \n        where \n            tb_2_.FIRST_NAME in (?, ?)\n    )\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528all\u8fd0\u7b97\u7b26"},"\u4f7f\u7528all\u8fd0\u7b97\u7b26"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(\n        book.id().ne(sqlClient\n            .createSubQuery(author)\n            .where(\n                author.firstName().in(\n                    Arrays.asList("Alex", "Bill")\n                )\n            )\n            .select(author.books().id())\n            // highlight-next-line\n            .all()\n        )\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            // highlight-next-line\n            table.id ne all(\n                subQuery(Author::class) {\n                    where(\n                        table.firstName valueIn listOf(\n                            "Alex",\n                            "Bill"\n                        )\n                    )\n                    select(table.id)\n                }\n            )\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere tb_1_.ID = \n    /* highlight-next-line */\n    all(\n        select \n            tb_3_.BOOK_ID \n        from AUTHOR as tb_2_ \n        inner join BOOK_AUTHOR_MAPPING as tb_3_ \n            on tb_2_.ID = tb_3_.AUTHOR_ID \n        where \n            tb_2_.FIRST_NAME in (?, ?)\n    )\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528exists\u8fd0\u7b97\u7b26"},"\u4f7f\u7528exists\u8fd0\u7b97\u7b26"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(sqlClient\n        .createSubQuery(author)\n        .where(\n            author.books().eq(book),\n            author.firstName().eq("Alex")\n        )\n        .select(author)\n        // highlight-next-line\n        .exists()\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            // highlight-next-line\n            exists(\n                subQuery(Author::class) {\n                    where(\n                        table.books eq parentTable,\n                        table.firstName eq "Alex"\n                    )\n                    select(table)\n                }\n            )\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere \n    /* highlight-next-line */\n    exists (\n        select \n            1 \n        from AUTHOR as tb_2_ \n        inner join BOOK_AUTHOR_MAPPING as tb_3_ \n            on tb_2_.ID = tb_3_.AUTHOR_ID \n        where \n            tb_1_.ID = tb_3_.BOOK_ID \n        and \n            tb_2_.FIRST_NAME = ?\n    )\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u6ce8\u610f\uff0c\u5728\u6700\u7ec8\u751f\u6210\u7684SQL\u4e2d\uff0c\u5b50\u67e5\u8be2\u9009\u53d6\u7684\u5217\u662f\u5e38\u91cf",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"\uff0c\u5e76\u975eJava\u4ee3\u7801\u7684\u8bbe\u7f6e\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u8fd9\u662f\u56e0\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"exists"),"\u8fd0\u7b97\u7b26\u53ea\u5728\u4e4e\u5b50\u67e5\u8be2\u662f\u5426\u80fd\u5339\u914d\u5230\u6570\u636e\uff0c\u5e76\u4e0d\u5728\u4e4e\u5b50\u67e5\u8be2\u9009\u53d6\u4e86\u90a3\u4e9b\u5217\u3002\u65e0\u8bba\u4f60\u5728Java\u4ee3\u7801\u4e2d\u8ba9\u5b50\u67e5\u8be2\u9009\u53d6\u4ec0\u4e48\uff0c\u90fd\u4f1a\u88ab\u65e0\u89c6\u3002")),(0,r.kt)("h2",{id:"\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2"},"\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2"),(0,r.kt)("p",null,"\u4e0a\u4e00\u8282\u6700\u540e\u4e00\u4e2a\u4f8b\u5b50\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"exists"),"\u5b50\u67e5\u8be2\uff0c\u65e0\u8bba\u4f60\u5728Java\u4ee3\u7801\u4e2d\u8ba9\u5b50\u67e5\u8be2\u9009\u53d6\u4ec0\u4e48\u90fd\u4f1a\u88ab\u65e0\u89c6\u3002"),(0,r.kt)("p",null,"\u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4ec0\u4e48\u8981\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"exists"),"\u5b50\u67e5\u8be2\u6307\u5b9a\u8fd4\u56de\u683c\u5f0f\u5462\uff1f"),(0,r.kt)("p",null,"\u56e0\u6b64\uff0cjimmer-sql\u652f\u6301\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2(Wild sub query)\uff0c\u548c\u666e\u901a\u5b50\u67e5\u8be2\u4e0d\u540c\uff0c\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2\u5b9e\u73b0\u4e2d\uff0c\u4e0d\u518d\u9700\u8981\u6700\u540e\u90a3\u4e00\u53e5select\u65b9\u6cd5\u8c03\u7528\uff0c\u5373\uff0c\u4e0d\u9700\u8981\u8fd4\u56de\u7c7b\u578b\u3002"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(sqlClient\n        .createSubQuery(author)\n        .where(\n            author.books().eq(book),\n            author.firstName().eq("Alex")\n        )\n        // \u6b64\u5904\u65e0select\n        .exists()\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(s.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            exists(\n                // highlight-next-line\n                wildSubQuery(Author::class) {\n                    where(\n                        table.books eq parentTable,\n                        table.firstName eq "Alex"\n                    )\n                    // \u6b64\u5904\u65e0select\n                }\n            )\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u4e0d\u53d8\uff0c\u4ecd\u7136\u662f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere \n    /* highlight-next-line */\n    exists (\n        select \n            1 \n        from AUTHOR as tb_2_ \n        inner join BOOK_AUTHOR_MAPPING as tb_3_ \n            on tb_2_.ID = tb_3_.AUTHOR_ID \n        where \n            tb_1_.ID = tb_3_.BOOK_ID \n        and \n            tb_2_.FIRST_NAME = ?\n    )\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u65e0\u7c7b\u578b\u5b50\u67e5\u8be2\u552f\u4e00\u7684\u4ef7\u503c\uff0c\u5c31\u662f\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"exists"),"\u8fd0\u7b97\u7b26\u914d\u5408\u3002")))}_.isMDXComponent=!0}}]);