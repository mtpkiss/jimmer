"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[1056],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(t),d=l,b=c["".concat(s,".").concat(d)]||c[d]||p[d]||r;return t?a.createElement(b,o(o({ref:n},u),{},{components:t})):a.createElement(b,o({ref:n},u))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var m=2;m<r;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},85162:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(67294),l=t(34334),r="tabItem_Ymn6";function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,o),hidden:t},n)}},65488:function(e,n,t){t.d(n,{Z:function(){return d}});var a=t(83117),l=t(67294),r=t(34334),o=t(72389),i=t(67392),s=t(7094),m=t(12466),u="tabList__CuJ",p="tabItem_LNqP";function c(e){var n,t,o=e.lazy,c=e.block,d=e.defaultValue,b=e.values,k=e.groupId,g=e.className,f=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=b?b:f.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),N=(0,i.l)(v,(function(e,n){return e.value===n.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===d?d:null!=(n=null!=d?d:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value)?n:f[0].props.value;if(null!==h&&!v.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var _=(0,s.U)(),y=_.tabGroupChoices,T=_.setTabGroupChoices,I=(0,l.useState)(h),O=I[0],A=I[1],E=[],x=(0,m.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var j=y[k];null!=j&&j!==O&&v.some((function(e){return e.value===j}))&&A(j)}var B=function(e){var n=e.currentTarget,t=E.indexOf(n),a=v[t].value;a!==O&&(x(n),A(a),null!=k&&T(k,String(a)))},q=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,l=E.indexOf(e.currentTarget)+1;t=null!=(a=E[l])?a:E[0];break;case"ArrowLeft":var r,o=E.indexOf(e.currentTarget)-1;t=null!=(r=E[o])?r:E[E.length-1]}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},g)},v.map((function(e){var n=e.value,t=e.label,o=e.attributes;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:function(e){return E.push(e)},onKeyDown:q,onFocus:B,onClick:B},o,{className:(0,r.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),o?(0,l.cloneElement)(f.filter((function(e){return e.props.value===O}))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},f.map((function(e,n){return(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}function d(e){var n=(0,o.Z)();return l.createElement(c,(0,a.Z)({key:String(n)},e))}},8631:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return m},metadata:function(){return p},toc:function(){return d}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),o=t(65488),i=t(85162),s=["components"],m={sidebar_position:1,title:"\u5feb\u901f\u4e0a\u624b"},u=void 0,p={unversionedId:"jimmer-sql/basic/usage",id:"jimmer-sql/basic/usage",title:"\u5feb\u901f\u4e0a\u624b",description:"\u6b64\u6587\u6863\u4ec5\u4ec5\u63cf\u8ff0\u5728\u4e0d\u4f7f\u7528spring-boot\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u4ee5\u6700\u539f\u59cb\u7684\u65b9\u5f0f\u4f7f\u7528Jimmer\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/jimmer-sql/basic/usage.mdx",sourceDirName:"jimmer-sql/basic",slug:"/jimmer-sql/basic/usage",permalink:"/jimmer/zh/docs/jimmer-sql/basic/usage",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/jimmer-sql/basic/usage.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"\u5feb\u901f\u4e0a\u624b"},sidebar:"tutorialSidebar",previous:{title:"\u57fa\u7840",permalink:"/jimmer/zh/docs/jimmer-sql/basic/"},next:{title:"\u6620\u5c04",permalink:"/jimmer/zh/docs/jimmer-sql/basic/mapping"}},c={},d=[{value:"\u5bfc\u5165\u4f9d\u8d56",id:"\u5bfc\u5165\u4f9d\u8d56",level:2},{value:"\u5b9a\u4e49\u5b9e\u4f53",id:"\u5b9a\u4e49\u5b9e\u4f53",level:2},{value:"\u521b\u5efaSqlClient",id:"\u521b\u5efasqlclient",level:2},{value:"\u67e5\u8be2",id:"\u67e5\u8be2",level:2},{value:"\u7b80\u5355\u67e5\u8be2",id:"\u7b80\u5355\u67e5\u8be2",level:3},{value:"\u4f7f\u7528\u5bf9\u8c61\u6293\u53d6\u5668",id:"\u4f7f\u7528\u5bf9\u8c61\u6293\u53d6\u5668",level:3},{value:"\u4f7f\u7528\u8868\u8fde\u63a5",id:"\u4f7f\u7528\u8868\u8fde\u63a5",level:3},{value:"\u4f7f\u7528\u5b50\u67e5\u8be2",id:"\u4f7f\u7528\u5b50\u67e5\u8be2",level:3},{value:"\u5206\u7ec4\u67e5\u8be2",id:"\u5206\u7ec4\u67e5\u8be2",level:3},{value:"\u5206\u9875\u67e5\u8be2",id:"\u5206\u9875\u67e5\u8be2",level:3},{value:"\u6df7\u5408Native SQL",id:"\u6df7\u5408native-sql",level:3},{value:"\u4fee\u6539",id:"\u4fee\u6539",level:2},{value:"\u4f7f\u7528\u4fee\u6539\u8bed\u53e5",id:"\u4f7f\u7528\u4fee\u6539\u8bed\u53e5",level:3},{value:"update\u8bed\u53e5",id:"update\u8bed\u53e5",level:4},{value:"delete\u8bed\u53e5",id:"delete\u8bed\u53e5",level:4},{value:"\u4f7f\u7528\u4fee\u6539\u6307\u4ee4",id:"\u4f7f\u7528\u4fee\u6539\u6307\u4ee4",level:3},{value:"Save\u6307\u4ee4",id:"save\u6307\u4ee4",level:4},{value:"1. \u4fdd\u5b58\u5355\u4e2a\u5bf9\u8c61",id:"1-\u4fdd\u5b58\u5355\u4e2a\u5bf9\u8c61",level:5},{value:"2. \u4fdd\u5b58\u5bf9\u8c61\u6811",id:"2-\u4fdd\u5b58\u5bf9\u8c61\u6811",level:5},{value:"Delete\u6307\u4ee4",id:"delete\u6307\u4ee4",level:4}],b={toc:d};function k(e){var n=e.components,t=(0,l.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\u6b64\u6587\u6863\u4ec5\u4ec5\u63cf\u8ff0\u5728\u4e0d\u4f7f\u7528spring-boot\u7684\u60c5\u51b5\u4e0b\u5982\u4f55\u4ee5\u6700\u539f\u59cb\u7684\u65b9\u5f0f\u4f7f\u7528Jimmer\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u4ece0.6.x\u5f00\u59cb\uff0cJimmer\u6574\u5408spring-data\u5e76\u63d0\u4f9bspring-boot-starter\u3002"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u8fdb\u4e00\u6b65\u964d\u4f4e\u4f7f\u7528\u96be\u5ea6\uff0c\u540e\u7aef\u5f00\u53d1\u53d8\u5f97\u6781\u5176\u7b80\u5355"),(0,r.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u524d\u540e\u7aef\u514d\u5bf9\u63a5\u7684\u670d\u52a1\u3002")),(0,r.kt)("p",{parentName:"admonition"},"\u5bf9\u4e8e\u8fd9\u79cd\u5168\u65b0\u7684\u66f4\u7b80\u5355\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u8bf7\u53c2\u8003",(0,r.kt)("a",{parentName:"p",href:"../spring-boot"},"\u4f7f\u7528Spring Boot Starter")),(0,r.kt)("p",{parentName:"admonition"},"\u5982\u679c\u4f60\u60f3\u5728\u975espring\u73af\u5883\u4e0b\u4f7f\u7528jimmer\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u6b64\u6587\u3002")),(0,r.kt)("p",null,"jimmer-sql\u5185\u5bb9\u76f8\u5bf9\u8f83\u591a\uff0c\u540e\u7eed\u6587\u7ae0\u4f1a\u9010\u6b65\u8bb2\u89e3\u3002\u672c\u6587\u5bf9\u5176\u90e8\u5206\u529f\u80fd\u8fdb\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u7f57\u5217\uff0c\u8ba9\u8bfb\u8005\u6709\u4e00\u4e2a\u611f\u6027\u7684\u8ba4\u77e5\u3002"),(0,r.kt)("h2",{id:"\u5bfc\u5165\u4f9d\u8d56"},"\u5bfc\u5165\u4f9d\u8d56"),(0,r.kt)(o.Z,{groupId:"buildScript",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java(Gradle)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},"depdencies {\n    \n    implementation 'org.babyfish.jimmer:jimmer-sql:0.7.82'\n    annotationProcessor 'org.babyfish.jimmer:jimmer-apt:0.7.82'\n\n    runtimeOnly 'com.h2database:h2:2.1.212'\n}\n"))),(0,r.kt)(i.Z,{value:"java-maven",label:"Java(Maven)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<dependencies>\n    <dependency>\n        <groupId>org.babyfish.jimmer</groupId>\n        <artifactId>jimmer-sql</artifactId>\n        <version>0.7.82</version>\n    </dependency>\n    <dependency>\n        <groupId>com.h2database</groupId>\n        <artifactId>h2</artifactId>\n        <version>2.1.212</version>\n        <scope>runtime</scope>\n    </dependency>\n</dependencies>\n\n<build>\n    <plugins>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.10.1</version>\n            <configuration>\n                <annotationProcessorPaths>\n                    <path>\n                        <groupId>org.babyfish.jimmer</groupId>\n                        <artifactId>jimmer-apt</artifactId>\n                        <version>0.7.82</version>\n                    </path>\n                </annotationProcessorPaths>\n            </configuration>\n        </plugin>\n    </plugins>\n</build>\n"))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin(Gradle)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'plugins {\n    // \u7b2c\u4e00\u6b65: \u6dfb\u52a0ksp\u63d2\u4ef6\n    id("com.google.devtools.ksp") version "1.7.10-1.0.6"\n\n    ...ommit other plugins...\n}\ndepdencies {\n    \n    // \u7b2c\u4e8c\u6b65: \u6dfb\u52a0jimmer-sql-kotlin\n    implementation("org.babyfish.jimmer:jimmer-sql-kotlin:0.7.82")\n\n    // \u7b2c\u4e09\u6b65: \u5e94\u7528ksp\u63d2\u4ef6\n    ksp("org.babyfish.jimmer:jimmer-ksp:0.7.82")\n\n    runtimeOnly("com.h2database:h2:2.1.212")\n\n    ...ommit other dependency...\n}\n\n// \u7b2c\u56db\u6b65: \u5c06\u751f\u6210\u7684\u4ee3\u7801\u6dfb\u52a0\u5230\u7f16\u8bd1\u76ee\u5f55\u4e2d\u3002\n// \u6ca1\u6709\u8fd9\u4e2a\u914d\u7f6e\uff0cgradle\u547d\u4ee4\u4ecd\u7136\u53ef\u4ee5\u6b63\u5e38\u6267\u884c\uff0c\n// \u4f46\u662f, Intellij\u65e0\u6cd5\u627e\u5230\u751f\u6210\u7684\u6e90\u7801\u3002\nkotlin {\n    sourceSets.main {\n        kotlin.srcDir("build/generated/ksp/main/kotlin")\n    }\n}\n'))),(0,r.kt)(i.Z,{value:"kotlin-maven",label:"Kotlin(Maven)",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'},"\n<dependencies>\n    <dependency>\n        <groupId>org.babyfish.jimmer</groupId>\n        <artifactId>jimmer-sql-kotlin</artifactId>\n        <version>0.7.82</version>\n    </dependency>\n    <dependency>\n        <groupId>com.h2database</groupId>\n        <artifactId>h2</artifactId>\n        <version>2.1.212</version>\n        <scope>runtime</scope>\n    </dependency>\n</dependencies>\n\n<build>\n    <sourceDirectory>src/main/kotlin</sourceDirectory>\n    <testSourceDirectory>src/test/kotlin</testSourceDirectory>\n\n    <plugins>\n        <plugin>\n            <groupId>org.jetbrains.kotlin</groupId>\n            <artifactId>kotlin-maven-plugin</artifactId>\n            <version>${kotlin.version}</version>\n            <executions>\n                <execution>\n                    <id>compile</id>\n                    <phase>compile</phase>\n                    <goals>\n                        <goal>compile</goal>\n                    </goals>\n                </execution>\n                <execution>\n                    <id>test-compile</id>\n                    <phase>test-compile</phase>\n                    <goals>\n                        <goal>test-compile</goal>\n                    </goals>\n                </execution>\n            </executions>\n            <configuration>\n                <compilerPlugins>\n                    <compilerPlugin>ksp</compilerPlugin>\n                </compilerPlugins>\n            </configuration>\n            <dependencies>\n                <dependency>\n                    <groupId>com.dyescape</groupId>\n                    <artifactId>kotlin-maven-symbol-processing</artifactId>\n                    <version>1.3</version>\n                </dependency>\n                <dependency>\n                    <groupId>org.babyfish.jimmer</groupId>\n                    <artifactId>jimmer-ksp</artifactId>\n                    <version>0.7.82</version>\n                </dependency>\n            </dependencies>\n        </plugin>\n    </plugins>\n</build>\n")))),(0,r.kt)("h2",{id:"\u5b9a\u4e49\u5b9e\u4f53"},"\u5b9a\u4e49\u5b9e\u4f53"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="BookStore.java"',title:'"BookStore.java"'},'package org.babyfish.jimmer.sql.example.model;\n\nimport javax.validation.constraints.Null;\nimport java.util.List;\n\nimport org.babyfish.jimmer.sql.Entity;\nimport org.babyfish.jimmer.sql.Id;\nimport org.babyfish.jimmer.sql.OneToMany;\nimport org.babyfish.jimmer.sql.Key;\n\n@Entity\npublic interface BookStore {\n\n    @Id\n    long id();\n\n    @Key\n    String name();\n\n    @Null\n    String website();\n\n    @OneToMany(mappedBy = "store")\n    List<Book> books();\n}\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="BookStore.kt"',title:'"BookStore.kt"'},'package org.babyfish.jimmer.sql.example.model\n\nimport org.babyfish.jimmer.sql.Entity\nimport org.babyfish.jimmer.sql.Id\nimport org.babyfish.jimmer.sql.OneToMany\nimport org.babyfish.jimmer.sql.Key\n\n@Entity\npublic interface BookStore {\n\n    @Id\n    val id: Long\n\n    @Key\n    val name: String\n\n    val website: String?\n\n    @OneToMany(mappedBy = "store")\n    val books: List<Book>\n}\n')))),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Book.java"',title:'"Book.java"'},'package org.babyfish.jimmer.sql.example.model;\n\nimport javax.validation.constraints.Null;\nimport java.math.BigDecimal;\nimport java.util.List;\n\nimport org.babyfish.jimmer.sql.Entity;\nimport org.babyfish.jimmer.sql.JoinColumn;\nimport org.babyfish.jimmer.sql.Key;\nimport org.babyfish.jimmer.sql.ManyToOne;\nimport org.babyfish.jimmer.sql.ManyToMany;\n\n@Entity\npublic interface Book {\n\n    @Id\n    long id();\n\n    @Key\n    String name();\n\n    @Key\n    int edition();\n\n    BigDecimal price();\n\n    @Null\n    @ManyToOne\n    BookStore store();\n\n    @ManyToMany\n    @JoinTable(\n            name = "BOOK_AUTHOR_MAPPING",\n            joinColumnName = "BOOK_ID",\n            inverseJoinColumnName = "AUTHOR_ID"\n    )\n    List<Author> authors();\n}\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Book.kt"',title:'"Book.kt"'},'package org.babyfish.jimmer.sql.example.model\n\nimport java.math.BigDecimal\nimport java.util.UUID\n\nimport org.babyfish.jimmer.sql.Entity\nimport org.babyfish.jimmer.sql.JoinColumn\nimport org.babyfish.jimmer.sql.Key\nimport org.babyfish.jimmer.sql.ManyToOne\nimport org.babyfish.jimmer.sql.ManyToMany\n\n@Entity\npublic interface Book {\n\n    @Id\n    val id: Long\n\n    @Key\n    val name: String\n\n    @Key\n    val edition: Int\n\n    val price: BigDecimal\n\n    @ManyToOne(optional = true)\n    val store: BookStore?\n\n    @ManyToMany\n    @JoinTable(\n            name = "BOOK_AUTHOR_MAPPING",\n            joinColumnName = "BOOK_ID",\n            inverseJoinColumnName = "AUTHOR_ID"\n    )\n    val authors: List<Author>\n}\n')))),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Author.java"',title:'"Author.java"'},'package org.babyfish.jimmer.sql.example.model;\n\nimport java.util.List;\nimport org.babyfish.jimmer.sql.Entity;\nimport org.babyfish.jimmer.sql.Key;\nimport org.babyfish.jimmer.sql.ManyToMany;\n\n@Entity\npublic interface Author {\n\n    @Id\n    long id();\n\n    @Key\n    String firstName();\n\n    @Key\n    String lastName();\n\n    Gender gender();\n\n    @ManyToMany(mappedBy = "authors")\n    List<Book> books();\n}\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Author.kt"',title:'"Author.kt"'},'package org.babyfish.jimmer.sql.example.model\n\nimport org.babyfish.jimmer.sql.Entity\nimport org.babyfish.jimmer.sql.Key\nimport org.babyfish.jimmer.sql.ManyToMany\n\n@Entity\npublic interface Author {\n\n    @Id\n    val id: Long\n\n    @Key\n    val firstName: String\n\n    @Key\n    val lastName: String\n\n    val gender: Gender\n\n    @ManyToMany(mappedBy = "authors")\n    val books: List<Book>\n}\n')))),(0,r.kt)("p",null,"Author\u7c7b\u4e2d\u4f7f\u7528\u4e86\u4e00\u4e2aGender\u7c7b\u578b\uff0c\u8fd9\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\uff0c\u5176\u5b9a\u4e49\u5982\u4e0b"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Gender.java"',title:'"Gender.java"'},"package org.babyfish.jimmer.sql.example.model;\n\npublic enum Gender {\n    MALE,\n    FEMALE\n}\n"))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Gender.kt"',title:'"Gender.kt"'},"package org.babyfish.jimmer.sql.example.model\n\nenum class Gender {\n    MALE,\n    FEMALE\n}\n")))),(0,r.kt)("h2",{id:"\u521b\u5efasqlclient"},"\u521b\u5efaSqlClient"),(0,r.kt)("p",null,"JSqlClient/KSqlClient\u662fjimmer-sql\u6240\u6709Api\u7684\u5165\u53e3\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u5148\u521b\u5efaSqlClient\u3002"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Java API\u548cKotlin API\u7684\u5165\u53e3\u4e0d\u540c"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Java API\u7684\u5165\u53e3\u662f",(0,r.kt)("inlineCode",{parentName:"li"},"org.babyfish.jimmer.sql.JSqlClient")),(0,r.kt)("li",{parentName:"ul"},"Kotlin API\u7684\u5165\u53e3\u662f",(0,r.kt)("inlineCode",{parentName:"li"},"org.babyfish.jimmer.sql.kt.KSqlClient")))),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package org.babyfish.jimmer.sql.example;\n\nimport org.babyfish.jimmer.sql.JSqlClient;\nimport org.babyfish.jimmer.sql.example.model.Gender;\nimport org.babyfish.jimmer.sql.runtime.ConnectionManager;\nimport org.babyfish.jimmer.sql.runtime.ScalarProvider;\n\nimport org.babyfish.jimmer.sql.example.model.Gender;\nimport javax.sql.DataSource;\n\nDataSource dataSource = ...;\n\nJSqlClient sqlClient = JSqlClient\n    .newBuilder()\n    .setConnectionManager(\n        ConnectionManager.simpleConnectionManager(dataSource)\n    )\n    .addScalarProvider(\n            ScalarProvider.enumProviderByString(Gender.class, it -> {\n                it.map(Gender.MALE, "M");\n                it.map(Gender.FEMALE, "F");\n            })\n    )\n    .build();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'import org.babyfish.jimmer.example.kt.sql.model.Gender\nimport org.babyfish.jimmer.sql.kt.newKSqlClient\nimport org.babyfish.jimmer.sql.runtime.ScalarProvider\nimport javax.sql.DataSource\n\nval sqlClient = newKSqlClient {\n    setConnectionManager {\n        dataSource.connection.use {\n            proceed(it)\n        }\n        addScalarProvider(\n            ScalarProvider.enumProviderByString(Gender::class.java) {\n                it.map(Gender.MALE, "M")\n                it.map(Gender.FEMALE, "F")\n            }\n        )\n    }\n}\n')))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u4ec5\u4ec5\u8ba9jimmer-sql\u80fd\u6839\u636e\u8fde\u63a5\u6c60\u81ea\u52a8\u521b\u5efa\u8fde\u63a5\u3002"),(0,r.kt)("p",{parentName:"admonition"},"\u5173\u4e8e\u548cSpring\u4e8b\u52a1\u673a\u5236\u914d\u5408\u7684\u8bdd\u9898\uff0c\u5176\u53c2\u89c1",(0,r.kt)("a",{parentName:"p",href:"./sql-client"},"SqlClient"))),(0,r.kt)("h2",{id:"\u67e5\u8be2"},"\u67e5\u8be2"),(0,r.kt)("h3",{id:"\u7b80\u5355\u67e5\u8be2"},"\u7b80\u5355\u67e5\u8be2"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(book.name().like("Java"))\n    .select(book)\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(table.name like "Kotlin")\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere tb_1_.NAME like ?\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528\u5bf9\u8c61\u6293\u53d6\u5668"},"\u4f7f\u7528\u5bf9\u8c61\u6293\u53d6\u5668"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(book.name().like("Learning GraphQL"))\n    .select(\n            // highlight-next-line\n            book.fetch(\n                    BookFetcher.$\n                            .allScalarFields()\n                            .store(\n                                    BookStoreFetcher.$\n                                            .allScalarFields()\n                            )\n                            .authors(\n                                    AuthorFetcher.$\n                                            .allScalarFields()\n                            )\n            )\n    )\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(table.name eq "Learning GraphQL")\n        select(\n            // highlight-next-line\n            table.fetchBy {\n                allScalarFields()\n                store {\n                    allScalarFields()\n                }\n                authors {\n                    allScalarFields()\n                }\n            }\n        )\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u4ee3\u7801\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"books"),"\u53d8\u91cf\u7ed3\u679c\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'[ \n    {\n        "id" : 1,\n        "name" : "Learning GraphQL",\n        "edition" : 1,\n        "price" : 50.00,\n        "store" : {\n            "id" : 1,\n            "name" : "O\'REILLY",\n            "website" : null\n        },\n        "authors" : [ \n            {\n                "id" : 1,\n                "firstName" : "Eve",\n                "lastName" : "Procello",\n                "gender" : "FEMALE"\n            }, \n            {\n                "id" : 2,\n                "firstName" : "Alex",\n                "lastName" : "Banks",\n                "gender" : "MALE"\n            } \n        ]\n    }, \n    {\n        "id" : 2,\n        "name" : "Learning GraphQL",\n        "edition" : 2,\n        "price" : 55.00,\n        "store" : {\n            "id" : 1,\n            "name" : "O\'REILLY",\n            "website" : null\n        },\n        "authors" : [ \n            {\n                "id" : 1,\n                "firstName" : "Eve",\n                "lastName" : "Procello",\n                "gender" : "FEMALE"\n            }, \n            {\n                "id" : 2,\n                "firstName" : "Alex",\n                "lastName" : "Banks",\n                "gender" : "MALE"\n            } \n        ]\n    }, \n    {\n        "id" : 3,\n        "name" : "Learning GraphQL",\n        "edition" : 3,\n        "price" : 51.00,\n        "store" : {\n            "id" : 1,\n            "name" : "O\'REILLY",\n            "website" : null\n        },\n        "authors" : [ \n            {\n                "id" : 1,\n                "firstName" : "Eve",\n                "lastName" : "Procello",\n                "gender" : "FEMALE"\n            }, \n            {\n                "id" : 2,\n                "firstName" : "Alex",\n                "lastName" : "Banks",\n                "gender" : "MALE"\n            } \n        ]\n    } \n]\n')),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684\u4e09\u6761SQL\u8bed\u53e5\uff0c\u5982\u4e0b"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u67e5\u8be2\u805a\u5408\u6839"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere tb_1_.NAME = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u89e3\u51b3\u591a\u5bf9\u4e00\u5173\u8054",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.WEBSITE \nfrom BOOK_STORE as tb_1_ \nwhere tb_1_.ID = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u89e3\u51b3\u591a\u5bf9\u591a\u5173\u8054",(0,r.kt)("inlineCode",{parentName:"p"},"Book.authors")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_2_.BOOK_ID, \n    tb_1_.ID, \n    tb_1_.FIRST_NAME, \n    tb_1_.LAST_NAME, \n    tb_1_.GENDER \nfrom AUTHOR as tb_1_ \ninner join BOOK_AUTHOR_MAPPING as tb_2_ on tb_1_.ID = tb_2_.AUTHOR_ID \nwhere tb_2_.BOOK_ID in (?, ?, ?)\n")))),(0,r.kt)("h3",{id:"\u4f7f\u7528\u8868\u8fde\u63a5"},"\u4f7f\u7528\u8868\u8fde\u63a5"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(\n        book\n            // highlight-next-line\n            .store()\n            .name()\n            .eq("MANNING")\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            table\n                // highlight-next-line\n                .store\n                .name eq "MANNING"\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_\n/* highlight-next-line */\ninner join BOOK_STORE as tb_2_ on tb_1_.STORE_ID = tb_2_.ID \nwhere tb_2_.NAME = ?\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528\u5b50\u67e5\u8be2"},"\u4f7f\u7528\u5b50\u67e5\u8be2"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\nAuthorTableEx author = AuthorTableEx.$;\n\nList<Book> books = sqlClient\n    .createQuery(book)\n    .where(\n        book.id().in(sqlClient\n            //highlight-next-line\n            .createSubQuery(author)\n            .where(author.firstName().like("Alex"))\n            .select(author.books().id())\n        )\n    )\n    .select(book)\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val books = sqlClient\n    .createQuery(Book::class) {\n        where(\n            // highlight-next-line\n            table.id valueIn subQuery(Author::class) {\n                where(table.firstName eq "Alex")\n                select(table.books.id)\n            }\n        )\n        select(table)\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \nwhere tb_1_.ID in (\n    /* highlight-next-line */\n    select tb_3_.BOOK_ID \n    from AUTHOR as tb_2_ \n    inner join BOOK_AUTHOR_MAPPING as tb_3_ \n    on tb_2_.ID = tb_3_.AUTHOR_ID \n    where tb_2_.FIRST_NAME like ?\n)\n")),(0,r.kt)("h3",{id:"\u5206\u7ec4\u67e5\u8be2"},"\u5206\u7ec4\u67e5\u8be2"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"BookTable book = BookTable.$;\n\n// \u7b2c\u4e00\u5217\uff1a\u4e66\u5e97id\n// \u7b2c\u4e8c\u5217\uff1a\u6bcf\u4e2a\u4e66\u5e97\u7684\u4e66\u7684\u5e73\u5747\u4ef7\u683c\nList<Tuple2<Long, BigDecimal>> tuples = sqlClient\n    .createQuery(book)\n    // highlight-next-line\n    .groupBy(book.store().id())\n    .select(\n        book.store().id(),\n        // highlight-next-line\n        book.price().avg()\n    )\n    .execute();\n"))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"// \u7b2c\u4e00\u5217\uff1a\u4e66\u5e97id\n// \u7b2c\u4e8c\u5217\uff1a\u6bcf\u4e2a\u4e66\u5e97\u7684\u4e66\u7684\u5e73\u5747\u4ef7\u683c\nval tuples = sqlClient\n    .createQuery(Book::class) {\n        // highlight-next-line\n        groupBy(table.store.id)\n        select(\n            table.store.id,\n            // highlight-next-line\n            avg(table.price)\n        )\n    }\n    .execute()\n")))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.STORE_ID, \n    /* highlight-next-line */\n    avg(tb_1_.PRICE) \nfrom BOOK as tb_1_ \n/* highlight-next-line */\ngroup by tb_1_.STORE_ID\n")),(0,r.kt)("h3",{id:"\u5206\u9875\u67e5\u8be2"},"\u5206\u9875\u67e5\u8be2"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nConfigurableRootQuery<BookTable, Book> bookQuery = \n    sqlClient\n        .createQuery(book)\n        .where(book.store().name().eq("O\'REILLY"))\n        .orderBy(book.name())\n        .select(book);\n\nTypedRootQuery<Long> countQuery = bookQuery\n    // highlight-next-line\n    .reselect((q, t) ->\n        q.select(t.count())\n    )\n    .withoutSortingAndPaging();\n\nint rowCount = countQuery.execute().get(0).intValue();\n\nList<Book> rows = bookQuery\n    // highlight-next-line\n    .limit(/*limit*/ rowCount / 3, /*offset*/ rowCount / 3)\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val bookQuery = sqlClient\n    .createQuery(Book::class) {\n        where(table.store.name eq "O\'REILLY")\n        orderBy(table.name)\n        select(table)\n    }\n\nval countQuery = bookQuery\n    // highlight-next-line\n    .reselect {\n        select(count(table))\n    }\n    .withoutSortingAndPaging()\n\nval rowCount = countQuery.execute()[0].toInt()\n\nval books = bookQuery\n    .limit(limit = rowCount / 3, offset = rowCount / 3)\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u4f1a\u751f\u6210\u4e24\u6761SQL"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"/* highlight-next-line */\nselect count(tb_1_.ID) \nfrom BOOK as tb_1_ \ninner join BOOK_STORE as tb_2_ on tb_1_.STORE_ID = tb_2_.ID \nwhere tb_2_.NAME = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID \nfrom BOOK as tb_1_ \ninner join BOOK_STORE as tb_2_ on tb_1_.STORE_ID = tb_2_.ID \nwhere tb_2_.NAME = ? \norder by tb_1_.NAME asc \n/* highlight-next-line */\nlimit ?\n")))),(0,r.kt)("h3",{id:"\u6df7\u5408native-sql"},"\u6df7\u5408Native SQL"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\n// \u7b2c\u4e00\u5217\uff1a\u4e66\u7c4d\u5bf9\u8c61\n// \u7b2c\u4e8c\u5217: \u4e66\u7c4d\u4ef7\u683c\u7684\u5168\u5c40\u6392\u540d\n// \u7b2c\u4e09\u5217: \u4e66\u7c4d\u4ef7\u683c\u5728\u5176\u6240\u5c5e\u4e66\u5e97\u7684\u6392\u540d\nList<Tuple3<Book, Integer, Integer>> tuples = sqlClient\n    .createQuery(book)\n    .select(\n        book,\n        // highlight-next-line\n        Expression.numeric().sql(\n            Integer.class,\n            "rank() over(order by %e desc)",\n            it -> it.expression(book.price())\n        ),\n        // highlight-next-line\n        Expression.numeric().sql(\n            Integer.class,\n            "rank() over(partition by %e order by %e desc)",\n            it -> it\n                .expression(book.store().id())\n                .expression(book.price())\n        )\n    )\n    .execute();\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'// \u7b2c\u4e00\u5217\uff1a\u4e66\u7c4d\u5bf9\u8c61\n// \u7b2c\u4e8c\u5217: \u4e66\u7c4d\u4ef7\u683c\u7684\u5168\u5c40\u6392\u540d\n// \u7b2c\u4e09\u5217: \u4e66\u7c4d\u4ef7\u683c\u5728\u5176\u6240\u5c5e\u4e66\u5e97\u7684\u6392\u540d\nval tuples = sqlClient\n    .createQuery(Book::class) {\n        select(\n            table,\n            // highlight-next-line\n            sql(\n                Int::class,\n                "rank() over(order by %e desc)"\n            ) {\n                expression(table.price)\n            },\n            // highlight-next-line\n            sql(\n                Int::class,\n                "rank() over(partition by %e order by %e desc)"\n            ) {\n                expression(table.store.id)\n                expression(table.price)\n            }\n        )\n    }\n    .execute()\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select \n    \n    tb_1_.ID, \n    tb_1_.NAME, \n    tb_1_.EDITION, \n    tb_1_.PRICE, \n    tb_1_.STORE_ID, \n    \n    /* highlight-next-line */\n    rank() over(order by tb_1_.PRICE desc), \n\n    /* highlight-next-line */\n    rank() over(partition by tb_1_.STORE_ID order by tb_1_.PRICE desc) \nfrom BOOK as tb_1_\n")),(0,r.kt)("h2",{id:"\u4fee\u6539"},"\u4fee\u6539"),(0,r.kt)("p",null,"jimmer-sql\u63d0\u4f9b\u4e24\u79cd\u65b9\u5f0f\u4fee\u6539\u6570\u636e\u5e93\uff0c\u8bed\u53e5\u548c\u6307\u4ee4"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8bed\u53e5\uff1a\u53ef\u4ee5\u6267\u884cupdate\u548cdelete\uff0c\u9002\u7528\u4e8e\u903b\u8f91\u7b80\u5355\u4f46\u9700\u8981\u6279\u91cf\u64cd\u4f5c\u7684\u573a\u5408\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u6307\u4ee4\uff1a\u53ef\u4ee5\u6267\u884cinsert\u3001update\u548cdelete\uff0c\u9002\u7528\u4e8e\u903b\u8f91\u590d\u6742\u7684\u573a\u5408\u3002")),(0,r.kt)("h3",{id:"\u4f7f\u7528\u4fee\u6539\u8bed\u53e5"},"\u4f7f\u7528\u4fee\u6539\u8bed\u53e5"),(0,r.kt)("h4",{id:"update\u8bed\u53e5"},"update\u8bed\u53e5"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nint affectedRowCount = sqlClient\n    // highlight-next-line\n    .createUpdate(book)\n    .set(\n        book.price(),\n        book.price().plus(new BigDecimal(10))\n    )\n    .where(book.name().like("Java"))\n    .execute();\nSystem.out.println("Affected row count: " + affectedRowCount);\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val affectedRowCount = sqlClient\n    // highlight-next-line\n    .createUpdate(Book::class) {\n        set(table.price, table.price + BigDecimal(20))\n        where(table.name like "Kotlin")\n    }\n    .execute()\nprintln("Affected row count: $affectedRowCount")\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u5982\u4e0bSQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"update BOOK tb_1_ \nset PRICE = tb_1_.PRICE + ? \nwhere tb_1_.NAME like ?\n")),(0,r.kt)("h4",{id:"delete\u8bed\u53e5"},"delete\u8bed\u53e5"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'BookTable book = BookTable.$;\n\nint affectedRowCount = sqlClient\n    // highlight-next-line\n    .createDelete(book)\n    .where(book.name().like("Java"))\n    .execute();\nSystem.out.println("Affected row count: " + affectedRowCount);\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val affectedRowCount = sqlClient\n    // highlight-next-line\n    .createDelete(Book::class) {\n        where(table.name like "Kotlin")\n    }\n    .execute()\nprintln("Affected row count: $affectedRowCount")\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u5982\u4e0bSQL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"delete from BOOK as tb_1_ where tb_1_.NAME like ?\n")),(0,r.kt)("h3",{id:"\u4f7f\u7528\u4fee\u6539\u6307\u4ee4"},"\u4f7f\u7528\u4fee\u6539\u6307\u4ee4"),(0,r.kt)("h4",{id:"save\u6307\u4ee4"},"Save\u6307\u4ee4"),(0,r.kt)("p",null,"\u7531\u4e8ejimmer-core\u63d0\u4f9b\u7684\u4e0d\u53ef\u53d8\u5b9e\u4f53\u5bf9\u8c61\u5177\u5907\u52a8\u6001\u6027\uff0c\u6240\u4ee5\u5b9e\u4f53\u5bf9\u8c61\u53ef\u4ee5\u8868\u8ff0\u5404\u79cd\u5404\u6837\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6b8b\u7f3a\u7684\u5bf9\u8c61"),(0,r.kt)("li",{parentName:"ul"},"\u5b8c\u6574\u7684\u5bf9\u8c61"),(0,r.kt)("li",{parentName:"ul"},"\u8f83\u6d45\u7684\u5bf9\u8c61\u6811"),(0,r.kt)("li",{parentName:"ul"},"\u8f83\u6df1\u7684\u5bf9\u8c61\u6811")),(0,r.kt)("p",null,"\u65e0\u8bba\u662f\u4f55\u79cd\u60c5\u51b5\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528Save\u6307\u4ee4\uff0c\u9760\u4e00\u53e5\u4ee3\u7801\u5bf9\u5176\u8fdb\u884c\u63d2\u5165\u3001\u66f4\u65b0\u3001\u6216\u4fdd\u5b58\uff08\u6240\u8c13\u4fdd\u5b58\uff0c\u5373\u63d2\u5165\u6216\u66f4\u65b0\uff09\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u7ed9\u4e88\u4e00\u4e2a\u611f\u6027\u8ba4\u77e5\u548c\u521d\u6b65\u4e86\u89e3\uff0c\u672c\u6587\u793a\u8303\u4e24\u4e2a\u4f8b\u5b50\uff0c\u4fdd\u5b58\u5355\u4e2a\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5bf9\u8c61\u6811\u3002"),(0,r.kt)("h5",{id:"1-\u4fdd\u5b58\u5355\u4e2a\u5bf9\u8c61"},"1. \u4fdd\u5b58\u5355\u4e2a\u5bf9\u8c61"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SimpleSaveResult<Book> result = sqlClient\n    .getEntities()\n    .save(\n        BookDraft.$.produce(book ->\n            book.setName("BookName")\n                .setEdition(1)\n                .setPrice(new BigDecimal(50))\n        )\n    );\nSystem.out.println(\n    "Affected row count: " + \n    result.getTotalAffectedRowCount()\n);\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val result = sqlClient\n    .entities\n    .save(\n        new(Book::class).by { \n            name = "BookName"\n            edition = 1\n            price = BigDecimal(50)\n        }\n    )\nprintln("Affected row count: ${result.totalAffectedRowCount}")\n')))),(0,r.kt)("p",null,"\u8fd9\u6761\u6307\u4ee4\u7684\u5b9e\u9645\u6267\u884c\u903b\u8f91\u4f9d\u8d56\u4e8e\u6570\u636e\u5e93\u4e2d\u73b0\u6709\u6570\u636e\uff0c\u5047\u8bbe\u6570\u636e\u4e2d\u4e0d\u5b58\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"name"),'\u4e3a"BookName"\u4e14',(0,r.kt)("inlineCode",{parentName:"p"},"edition"),"\u4e3a1\u7684\u4e66\u7c4d\uff0c\u5219\u751f\u6210\u5982\u4e0b\u8fd9\u4e9bSQL"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION \nfrom BOOK as tb_1_ \nwhere tb_1_.NAME = ? and tb_1_.EDITION = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into BOOK(ID, NAME, EDITION, PRICE) values(?, ?, ?, ?)\n")))),(0,r.kt)("h5",{id:"2-\u4fdd\u5b58\u5bf9\u8c61\u6811"},"2. \u4fdd\u5b58\u5bf9\u8c61\u6811"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'SimpleSaveResult<Book> result = sqlClient\n    .getEntities()\n    .saveCommand(\n        BookDraft.$.produce(book -> {\n            book.setName("BookName")\n                .setEdition(1)\n                .setPrice(new BigDecimal(50))\n                .applyStore(store -> \n                    store.setName("StoreName")\n                )\n                .addIntoAuthors(author -> {\n                    author\n                            .setFirstName("AuthorFirstName-1")\n                            .setLastName("AuthorLastName-1")\n                            .setGender(Gender.MALE);\n                })\n                .addIntoAuthors(author -> {\n                    author\n                            .setFirstName("AuthorFirstName-2")\n                            .setLastName("AuthorLastName-2")\n                            .setGender(Gender.FEMALE);\n                });\n        })\n    )\n    .configure(\n            AbstractSaveCommand.Cfg::setAutoAttachingAll\n    )\n    .execute();\n\nSystem.out.println(\n\n    "Affected row count: " +\n    result.getTotalAffectedRowCount() +\n\n    "\\nAffected row count of table \'BOOK\': " +\n    result.getAffectedRowCount(AffectedTable.of(Book.class)) +\n\n    "\\nAffected row count of table \'BOOK_STORE\': " +\n    result.getAffectedRowCount(AffectedTable.of(BookStore.class)) +\n\n    "\\nAffected row count of table \'AUTHOR\': " +\n    result.getAffectedRowCount(AffectedTable.of(Author.class)) +\n\n    "\\nAffected row count of middle table \'BOOK_AUTHOR_MAPPING\': " +\n    result.getAffectedRowCount(AffectedTable.of(BookProps.AUTHORS))\n);\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val result = sqlClient\n    .entities\n    .save(\n        new(Book::class).by { \n            name = "BookName"\n            edition = 1\n            price = BigDecimal(50)\n            store().apply { \n                name = "StoreName"\n            }\n            authors().addBy { \n                firstName = "AuthorFirstName-1"\n                lastName = "AuthorFirstName-1"\n                gender = Gender.MALE\n            }\n            authors().addBy {\n                firstName = "AuthorFirstName-2"\n                lastName = "AuthorFirstName-2"\n                gender = Gender.FEMALE\n            }\n        }\n    ) {\n        setAutoAttachingAll()\n    }\nprintln(\n    """Affected row count: ${result.totalAffectedRowCount}\n        |Affected row count of table \'BOOK\': ${\n            result.affectedRowCount(Book::class)\n        }\n        |Affected row count of table \'BOOK_STORE\': ${\n            result.affectedRowCount(BookStore::class)\n        }\n        |Affected row count of table \'AUTHOR\': ${\n            result.affectedRowCount(Author::class)\n        }Affected row count of middle table \'BOOK_AUTHOR_MAPPING\': ${\n            result.affectedRowCount(Book::authors)\n        }\n    """.trimMargin()\n)\n')))),(0,r.kt)("p",null,"\u8fd9\u6761\u6307\u4ee4\u7684\u5b9e\u9645\u6267\u884c\u903b\u8f91\u4f9d\u8d56\u4e8e\u6570\u636e\u5e93\u4e2d\u73b0\u6709\u6570\u636e\uff0c\u5047\u8bbe\u5bf9\u8c61\u6811\u4e2d\u6240\u6709\u5bf9\u8c61\u5728\u6570\u636e\u5e93\u4e2d\u90fd\u4e0d\u5b58\u5728\uff0c\u5219\u751f\u6210\u5982\u4e0b\u8fd9\u4e9bSQL"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select tb_1_.ID, tb_1_.NAME \nfrom BOOK_STORE as tb_1_ \nwhere tb_1_.NAME = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into BOOK_STORE(ID, NAME) values(?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select tb_1_.ID, tb_1_.NAME, tb_1_.EDITION \nfrom BOOK as tb_1_ \nwhere tb_1_.NAME = ? and tb_1_.EDITION = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into BOOK(ID, NAME, EDITION, PRICE, STORE_ID) \nvalues(?, ?, ?, ?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select tb_1_.ID, tb_1_.FIRST_NAME, tb_1_.LAST_NAME \nfrom AUTHOR as tb_1_ \nwhere tb_1_.FIRST_NAME = ? and tb_1_.LAST_NAME = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into AUTHOR(ID, FIRST_NAME, LAST_NAME, GENDER) \nvalues(?, ?, ?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select tb_1_.ID, tb_1_.FIRST_NAME, tb_1_.LAST_NAME \nfrom AUTHOR as tb_1_ \nwhere tb_1_.FIRST_NAME = ? and tb_1_.LAST_NAME = ?\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into AUTHOR(ID, FIRST_NAME, LAST_NAME, GENDER) \nvalues(?, ?, ?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"insert into BOOK_AUTHOR_MAPPING(BOOK_ID, AUTHOR_ID) \nvalues \n    (?, ?), \n    (?, ?)\n")))),(0,r.kt)("h4",{id:"delete\u6307\u4ee4"},"Delete\u6307\u4ee4"),(0,r.kt)(o.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Collection<Long> ids = ...\n\nDeleteResult result = sqlClient\n    .getEntities()\n    .batchDelete(Book.class, ids);\n\nSystem.out.println(\n    \n    "Affected row count: " + \n    result.getTotalAffectedRowCount() +\n\n    "\\nAffected row count of table \'BOOK\': " +\n    result.getAffectedRowCount(AffectedTable.of(Book.class)) +\n    \n    "\\nAffected row count of middle table \'BOOK_AUTHOR_MAPPING\': " +\n    result.getAffectedRowCount(AffectedTable.of(BookProps.AUTHORS))\n);\n'))),(0,r.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val ids: Collection<Long> = ...\nval result = sqlClient\n    .entities\n    .batchDelete(Book::class, ids)\nprintln(\n    """Affected row count: ${result.totalAffectedRowCount}\n        |Affected row count of table \'BOOK\': ${\n            result.affectedRowCount(Book::class)\n        }Affected row count of middle table \'BOOK_AUTHOR_MAPPING\': ${\n            result.affectedRowCount(Book::authors)\n        }\n    """.trimMargin()\n)\n')))),(0,r.kt)("p",null,"\u6700\u7ec8\u751f\u6210\u7684SQL\u5982\u4e0b"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"delete from BOOK_AUTHOR_MAPPING \nwhere BOOK_ID in(?, ?, ?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"delete from BOOK \nwhere ID in(?, ?, ?, ?)\n")))),(0,r.kt)("p",null,"\u6253\u5370\u7ed3\u679c\u5982\u4e0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Affected row count: 9\nAffected row count of table 'BOOK': 4\nAffected row count of middle table 'BOOK_AUTHOR_MAPPING': 5\n")))}k.isMDXComponent=!0}}]);