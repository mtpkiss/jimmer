"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[417],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:function(e,t,n){n.d(t,{Z:function(){return i}});var a=n(67294),o=n(34334),r="tabItem_Ymn6";function i(e){var t=e.children,n=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},65488:function(e,t,n){n.d(t,{Z:function(){return d}});var a=n(83117),o=n(67294),r=n(34334),i=n(72389),l=n(67392),s=n(7094),c=n(12466),u="tabList__CuJ",p="tabItem_LNqP";function m(e){var t,n,i=e.lazy,m=e.block,d=e.defaultValue,f=e.values,k=e.groupId,h=e.className,b=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=f?f:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),y=(0,l.l)(g,(function(e,t){return e.value===t.value}));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===d?d:null!=(t=null!=d?d:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:b[0].props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),O=N.tabGroupChoices,T=N.setTabGroupChoices,w=(0,o.useState)(v),C=w[0],j=w[1],A=[],B=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var D=O[k];null!=D&&D!==C&&g.some((function(e){return e.value===D}))&&j(D)}var S=function(e){var t=e.currentTarget,n=A.indexOf(t),a=g[n].value;a!==C&&(B(t),j(a),null!=k&&T(k,String(a)))},E=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,o=A.indexOf(e.currentTarget)+1;n=null!=(a=A[o])?a:A[0];break;case"ArrowLeft":var r,i=A.indexOf(e.currentTarget)-1;n=null!=(r=A[i])?r:A[A.length-1]}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":m},h)},g.map((function(e){var t=e.value,n=e.label,i=e.attributes;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:function(e){return A.push(e)},onKeyDown:E,onFocus:S,onClick:S},i,{className:(0,r.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":C===t})}),null!=n?n:t)}))),i?(0,o.cloneElement)(b.filter((function(e){return e.props.value===C}))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==C})}))))}function d(e){var t=(0,i.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},28054:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var a=n(83117),o=n(80102),r=(n(67294),n(3905)),i=n(65488),l=n(85162),s=["components"],c={sidebar_position:5,title:"Delete Command"},u=void 0,p={unversionedId:"jimmer-sql/mutation/delete-command",id:"jimmer-sql/mutation/delete-command",title:"Delete Command",description:"The scope of this article",source:"@site/docs/jimmer-sql/mutation/delete-command.mdx",sourceDirName:"jimmer-sql/mutation",slug:"/jimmer-sql/mutation/delete-command",permalink:"/jimmer/docs/jimmer-sql/mutation/delete-command",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer/tree/main/doc/docs/jimmer-sql/mutation/delete-command.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Delete Command"},sidebar:"tutorialSidebar",previous:{title:"Generate static types",permalink:"/jimmer/docs/jimmer-sql/mutation/static"},next:{title:"Mutate middle table",permalink:"/jimmer/docs/jimmer-sql/mutation/association"}},m={},d=[{value:"The scope of this article",id:"the-scope-of-this-article",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"Delete parent object",id:"delete-parent-object",level:2}],f={toc:d};function k(e){var t=e.components,n=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"the-scope-of-this-article"},"The scope of this article"),(0,r.kt)("p",null,"Jimmer supports ",(0,r.kt)("a",{parentName:"p",href:"../advanced/trigger"},"trigger"),", which is divided into binlog trigger and transaction trigger."),(0,r.kt)("p",null,"Using transaction triggers will cause jimmer's modification operations to generate more and more complete queries to simulate triggers."),(0,r.kt)("p",null,"Several scenarios have been discussed in this article, and the generated SQL will be discussed for each scenario, all on the premise that transaction triggers are not used."),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"The delete command is a relatively simple concept."),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'DeleteResult result = sqlClient\n    .getEntities()\n    .batchDelete(Book.class, Arrays.asList(1L, 2L, 3L, 4L));\n\nSystem.out.println(\n    \n    "Affected row count: " + \n    result.getTotalAffectedRowCount() +\n\n    "\\nAffected row count of table \'BOOK\': " +\n    result.getAffectedRowCount(AffectedTable.of(Book.class)) +\n    \n    "\\nAffected row count of middle table \'BOOK_AUTHOR_MAPPING\': " +\n    result.getAffectedRowCount(AffectedTable.of(BookProps.AUTHORS))\n);\n'))),(0,r.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'val result = sqlClient\n    .entities\n    .batchDelete(Book::class, listOf(1L, 2L, 3L, 4L))\nprintln(\n    """Affected row count: \n        |${result.totalAffectedRowCount}\n        |Affected row count of table \'BOOK\': \n        |${result.affectedRowCount(Book::class)}\n        |Affected row count of middle table \'BOOK_AUTHOR_MAPPING\': \n        |${result.affectedRowCount(Book::authors)}\n    """.trimMargin()\n)\n')))),(0,r.kt)("p",null,"The final generated SQL is as follows"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"delete from BOOK_AUTHOR_MAPPING \nwhere BOOK_ID in(?, ?, ?, ?)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"delete from BOOK \nwhere ID in(?, ?, ?, ?)\n")))),(0,r.kt)("h2",{id:"delete-parent-object"},"Delete parent object"),(0,r.kt)("p",null,"As can be seen from the above discussion, the delete command may cause the deletion of the data in the many-to-many association based on middle table, which is a relatively simple case."),(0,r.kt)("p",null,"For one-to-one or one-to-many associations based directly on foreign keys, the situation is a bit more complicated."),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'DeleteResult result = sqlClient\n    .getEntities()\n    .delete(BookStore.class, 1L);\n\nSystem.out.println(\n\n    "Affected row count: " +\n            result.getTotalAffectedRowCount() +\n\n            "\\nAffected row count of table \'BOOK_STORE\': " +\n            result.getAffectedRowCount(AffectedTable.of(BookStore.class)) +\n\n            "\\nAffected row count of table \'BOOK\': " +\n            result.getAffectedRowCount(AffectedTable.of(Book.class)) +\n\n            "\\nAffected row count of middle table \'BOOK_AUTHOR_MAPPING\': " +\n            result.getAffectedRowCount(AffectedTable.of(BookProps.AUTHORS))\n);\n'))),(0,r.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val result = sqlClient\n    .entities\n    .delete(BookStore::class, 1L)\nprintln(\n    \"\"\"Affected row count: \n        |${result.totalAffectedRowCount}\n        |Affected row count of table 'BOOK_STORE': \n        |${result.affectedRowCount(BookStore::class)}\n        |Affected row count of table 'BOOK': \n        |${result.affectedRowCount(Book::class)}\n        |Affected row count of middle table 'BOOK_AUTHOR_MAPPING': \n        |${result.affectedRowCount(Book::authors)}\n    \"\"\".trimMargin()\n)\n")))),(0,r.kt)("p",null,"This code deletes a ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStore")," object."),(0,r.kt)("p",null,"Since the ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStore")," object has a one-to-many association ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStore.books"),", if the deleted object already has some associated objects in the database, jimmer-sql will discard these objects."),(0,r.kt)("p",null,"The one-to-many association ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStore.books")," is not based on the middle table, but based on the foreign key. How will jimmer-sql discard these ",(0,r.kt)("inlineCode",{parentName:"p"},"Book")," objects?"),(0,r.kt)("p",null,"Unlike JPA, jimmer-sql does not allow direct use of ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToOne")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToMany")," for association mapping, ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToOne")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToMany")," must use the ",(0,r.kt)("inlineCode",{parentName:"p"},"mappedBy")," attribute. See ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#onetomany"},"@OneToMany")," for more information.\nUnlike JPA, jimmer-sql does not allow direct use of ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToOne")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToMany")," for association mapping, ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToOne")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@OneToMany")," must use the ",(0,r.kt)("inlineCode",{parentName:"p"},"mappedBy")," attribute. See ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#onetomany"},"@OneToMany")," for more information."),(0,r.kt)("p",null,"This means, through the one-to-many association ",(0,r.kt)("inlineCode",{parentName:"p"},"BookStore.books"),", jimmer-sql can definitely find the corresponding many-to-one association ",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store"),"."),(0,r.kt)("p",null,"Next, jimmer-sql will look at the annotation ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate")," on the many-to-one association property ",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If the foreign key of ",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store")," is configured as ",(0,r.kt)("inlineCode",{parentName:"p"},"SET_NULL")," by the annotated ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate"),", then execute the following SQL"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"update BOOK set STORE_ID = null where STORE_ID in(?)\n")),(0,r.kt)("p",{parentName:"li"},"The parameter is the id of the deleted object. Thus, the foreign keys of these discarded objects are set to null.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Otherwise, first, execute"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"select ID from BOOK where STORE_ID in(?)\n")),(0,r.kt)("p",{parentName:"li"},"The parameter is the id of the deleted object. In this way, the ids of these discarded objects are obtained."),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"If the query returns no data, ignore the next steps.")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"If the foreign key of ",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store")," is configured as ",(0,r.kt)("inlineCode",{parentName:"p"},"DELETE")," by the annotated ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate"),", Use the new delete command to delete these discarded objects, which is actually the automatic recursive execution capability of the delete command.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Otherwise, throw an exception."))))),(0,r.kt)("p",null,"All of the situations discussed above require the developer to use the annotation ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate")," on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Book.store")," property."),(0,r.kt)("p",null,"However, you can also dynamically specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"dissociateAction")," configuration for the delete command insteading of using the ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate")," annotation."),(0,r.kt)(i.Z,{groupId:"language",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"DeleteResult result = sqlClient\n    .getEntities()\n    .deleteCommand(BookStore.class, 1L)\n    .configure(it ->\n            it\n                // highlight-next-line\n                .setDissociateAction(\n                    BookProps.STORE,\n                    DissociateAction.SET_NULL\n                )\n    )\n    .execute();\n"))),(0,r.kt)(l.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"val result = sqlClient\n    .entities\n    .delete(BookStore::class, 1L) {\n        // highlight-next-line\n        setDissociateAction(\n            Book::store, \n            DissociateAction.SET_NULL\n        )\n    }\n")))),(0,r.kt)("p",null,"Here, calling ",(0,r.kt)("inlineCode",{parentName:"p"},"setDissociateAction")," of delete command has the same effect as statically using the annotation ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If the last parameter of the ",(0,r.kt)("inlineCode",{parentName:"p"},"setDissociateAction")," method is ",(0,r.kt)("inlineCode",{parentName:"p"},"DissociateAction.SET_NULL"),", the association property must be nullable, otherwise an exception will be thrown.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If the delete rule is not only dynamically configured for the save command, but also statically configured in the entity interface through the annotation ",(0,r.kt)("a",{parentName:"p",href:"../basic/mapping#dissociate"},"@OnDissociate"),", the dynamic configuration takes precedence.")))))}k.isMDXComponent=!0}}]);